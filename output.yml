openapi: 3.0.3
info:
  title: education system
  version: 1.0.0
  description: Your project description
paths:
  /api_admin_account/best_student/:
    get:
      operationId: api_admin_account_best_student_list
      description: |-
        api admin the best student
        pagination --> 20 item
        permission --? only amdin user
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api_admin_account
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdminBestStudentList'
          description: ''
    post:
      operationId: api_admin_account_best_student_create
      description: |-
        api admin the best student
        pagination --> 20 item
        permission --? only amdin user
      tags:
      - api_admin_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminBestStudent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminBestStudent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminBestStudent'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminBestStudent'
          description: ''
  /api_admin_account/best_student/{id}/:
    get:
      operationId: api_admin_account_best_student_retrieve
      description: |-
        api admin the best student
        pagination --> 20 item
        permission --? only amdin user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this best student.
        required: true
      tags:
      - api_admin_account
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminBestStudent'
          description: ''
    put:
      operationId: api_admin_account_best_student_update
      description: |-
        api admin the best student
        pagination --> 20 item
        permission --? only amdin user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this best student.
        required: true
      tags:
      - api_admin_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminBestStudent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminBestStudent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminBestStudent'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminBestStudent'
          description: ''
    patch:
      operationId: api_admin_account_best_student_partial_update
      description: |-
        api admin the best student
        pagination --> 20 item
        permission --? only amdin user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this best student.
        required: true
      tags:
      - api_admin_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminBestStudent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminBestStudent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminBestStudent'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminBestStudent'
          description: ''
    delete:
      operationId: api_admin_account_best_student_destroy
      description: |-
        api admin the best student
        pagination --> 20 item
        permission --? only amdin user
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this best student.
        required: true
      tags:
      - api_admin_account
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_admin_account/coach_list/:
    get:
      operationId: api_admin_account_coach_list_list
      description: |-
        show list coach
        permission --> only admin user
        search field --> use mobile phon (?phone=phone_number)
      tags:
      - api_admin_account
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminCouchList'
          description: ''
  /api_admin_account/student_list/:
    get:
      operationId: api_admin_account_student_list_list
      description: |-
        api admin the student list
        permission --? only admin user
        filter query --> ?phone=phone_number
      tags:
      - api_admin_account
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminStudentList'
          description: ''
  /api_admin_account/user_list/:
    get:
      operationId: api_admin_account_user_list_list
      description: |-
        show list user
        permission --> admin
        filter query --> ?phone=phone_number
      tags:
      - api_admin_account
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminUserList'
          description: ''
  /api_admin_course/category/:
    get:
      operationId: api_admin_course_category_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedListRetrieveCategoryList'
          description: ''
    post:
      operationId: api_admin_course_category_create
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateCategory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCategory'
          description: ''
  /api_admin_course/category/{category_pk}/admin_comment/:
    get:
      operationId: api_admin_course_category_admin_comment_list
      description: |-
        filter query --> ?is_pined=1 (1 equal comment is pined)
        pagination --> 20 item
        permission --> admin user
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdminCommentList'
          description: ''
    post:
      operationId: api_admin_course_category_admin_comment_create
      description: |-
        filter query --> ?is_pined=1 (1 equal comment is pined)
        pagination --> 20 item
        permission --> admin user
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminComment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminComment'
          description: ''
  /api_admin_course/category/{category_pk}/admin_comment/{id}/:
    get:
      operationId: api_admin_course_category_admin_comment_retrieve
      description: |-
        filter query --> ?is_pined=1 (1 equal comment is pined)
        pagination --> 20 item
        permission --> admin user
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminComment'
          description: ''
    put:
      operationId: api_admin_course_category_admin_comment_update
      description: |-
        filter query --> ?is_pined=1 (1 equal comment is pined)
        pagination --> 20 item
        permission --> admin user
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminComment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminComment'
          description: ''
    patch:
      operationId: api_admin_course_category_admin_comment_partial_update
      description: |-
        filter query --> ?is_pined=1 (1 equal comment is pined)
        pagination --> 20 item
        permission --> admin user
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminComment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminComment'
          description: ''
    delete:
      operationId: api_admin_course_category_admin_comment_destroy
      description: |-
        filter query --> ?is_pined=1 (1 equal comment is pined)
        pagination --> 20 item
        permission --> admin user
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_admin_course/category/{category_pk}/course/:
    get:
      operationId: api_admin_course_category_course_list
      description: |-
        pagination --> 20 item
        filter query --> ?course_name=course_name
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdminCourseList'
          description: ''
    post:
      operationId: api_admin_course_category_course_create
      description: |-
        pagination --> 20 item
        filter query --> ?course_name=course_name
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminCourse'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCourse'
          description: ''
  /api_admin_course/category/{category_pk}/course/{course_pk}/class_room/:
    get:
      operationId: api_admin_course_category_course_class_room_list
      description: filter query --> ?progress=progress(not_started, finished, in_progress)
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdminLessonCourseList'
          description: ''
    post:
      operationId: api_admin_course_category_course_class_room_create
      description: filter query --> ?progress=progress(not_started, finished, in_progress)
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminLessonCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminLessonCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminLessonCourse'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminLessonCourse'
          description: ''
  /api_admin_course/category/{category_pk}/course/{course_pk}/class_room/{class_room_pk}/student_enrollment/:
    get:
      operationId: api_admin_course_category_course_class_room_student_enrollment_list
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: class_room_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentEnrollment'
          description: ''
    post:
      operationId: api_admin_course_category_course_class_room_student_enrollment_create
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: class_room_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudentEnrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateStudentEnrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateStudentEnrollment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateStudentEnrollment'
          description: ''
  /api_admin_course/category/{category_pk}/course/{course_pk}/class_room/{class_room_pk}/student_enrollment/{id}/:
    get:
      operationId: api_admin_course_category_course_class_room_student_enrollment_retrieve
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: class_room_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEnrollment'
          description: ''
    put:
      operationId: api_admin_course_category_course_class_room_student_enrollment_update
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: class_room_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentEnrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentEnrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentEnrollment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEnrollment'
          description: ''
    patch:
      operationId: api_admin_course_category_course_class_room_student_enrollment_partial_update
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: class_room_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudentEnrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentEnrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentEnrollment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentEnrollment'
          description: ''
    delete:
      operationId: api_admin_course_category_course_class_room_student_enrollment_destroy
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: class_room_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_admin_course/category/{category_pk}/course/{course_pk}/class_room/{id}/:
    get:
      operationId: api_admin_course_category_course_class_room_retrieve
      description: filter query --> ?progress=progress(not_started, finished, in_progress)
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminLessonCourse'
          description: ''
    put:
      operationId: api_admin_course_category_course_class_room_update
      description: filter query --> ?progress=progress(not_started, finished, in_progress)
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminLessonCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminLessonCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminLessonCourse'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminLessonCourse'
          description: ''
    patch:
      operationId: api_admin_course_category_course_class_room_partial_update
      description: filter query --> ?progress=progress(not_started, finished, in_progress)
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminLessonCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminLessonCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminLessonCourse'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminLessonCourse'
          description: ''
    delete:
      operationId: api_admin_course_category_course_class_room_destroy
      description: filter query --> ?progress=progress(not_started, finished, in_progress)
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_admin_course/category/{category_pk}/course/{course_pk}/class_room/{id}/student_poll_answer/:
    get:
      operationId: api_admin_course_category_course_class_room_student_poll_answer_retrieve
      description: filter query --> ?progress=progress(not_started, finished, in_progress)
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCoachRanking'
          description: ''
  /api_admin_course/category/{category_pk}/course/{course_pk}/course_section/:
    get:
      operationId: api_admin_course_category_course_course_section_list
      description: filter query --> ?title=title
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdminCreateCourseSectionList'
          description: ''
    post:
      operationId: api_admin_course_category_course_course_section_create
      description: filter query --> ?title=title
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCreateCourseSection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminCreateCourseSection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminCreateCourseSection'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCreateCourseSection'
          description: ''
  /api_admin_course/category/{category_pk}/course/{course_pk}/course_section/{id}/:
    get:
      operationId: api_admin_course_category_course_course_section_retrieve
      description: filter query --> ?title=title
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCreateCourseSection'
          description: ''
    put:
      operationId: api_admin_course_category_course_course_section_update
      description: filter query --> ?title=title
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCreateCourseSection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminCreateCourseSection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminCreateCourseSection'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCreateCourseSection'
          description: ''
    patch:
      operationId: api_admin_course_category_course_course_section_partial_update
      description: filter query --> ?title=title
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminCreateCourseSection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminCreateCourseSection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminCreateCourseSection'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCreateCourseSection'
          description: ''
    delete:
      operationId: api_admin_course_category_course_course_section_destroy
      description: filter query --> ?title=title
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_admin_course/category/{category_pk}/course/{course_pk}/course_section/{section_pk}/certificate/:
    get:
      operationId: api_admin_course_category_course_course_section_certificate_list
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminCertificate'
          description: ''
    post:
      operationId: api_admin_course_category_course_course_section_certificate_create
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCertificate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminCertificate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminCertificate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCertificate'
          description: ''
  /api_admin_course/category/{category_pk}/course/{course_pk}/course_section/{section_pk}/certificate/{id}/:
    get:
      operationId: api_admin_course_category_course_course_section_certificate_retrieve
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCertificate'
          description: ''
    put:
      operationId: api_admin_course_category_course_course_section_certificate_update
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCertificate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminCertificate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminCertificate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCertificate'
          description: ''
    patch:
      operationId: api_admin_course_category_course_course_section_certificate_partial_update
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminCertificate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminCertificate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminCertificate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCertificate'
          description: ''
    delete:
      operationId: api_admin_course_category_course_course_section_certificate_destroy
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_admin_course/category/{category_pk}/course/{course_pk}/course_section/{section_pk}/section_file/:
    get:
      operationId: api_admin_course_category_course_course_section_section_file_list
      description: |-
        file_type --> main or more or gold
        zip_file --> (zip, rar)
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminCourseSectionFile'
          description: ''
    post:
      operationId: api_admin_course_category_course_course_section_section_file_create
      description: |-
        file_type --> main or more or gold
        zip_file --> (zip, rar)
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCourseSectionFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminCourseSectionFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminCourseSectionFile'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCourseSectionFile'
          description: ''
  /api_admin_course/category/{category_pk}/course/{course_pk}/course_section/{section_pk}/section_file/{id}/:
    get:
      operationId: api_admin_course_category_course_course_section_section_file_retrieve
      description: |-
        file_type --> main or more or gold
        zip_file --> (zip, rar)
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCourseSectionFile'
          description: ''
    put:
      operationId: api_admin_course_category_course_course_section_section_file_update
      description: |-
        file_type --> main or more or gold
        zip_file --> (zip, rar)
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCourseSectionFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminCourseSectionFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminCourseSectionFile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCourseSectionFile'
          description: ''
    patch:
      operationId: api_admin_course_category_course_course_section_section_file_partial_update
      description: |-
        file_type --> main or more or gold
        zip_file --> (zip, rar)
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminCourseSectionFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminCourseSectionFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminCourseSectionFile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCourseSectionFile'
          description: ''
    delete:
      operationId: api_admin_course_category_course_course_section_section_file_destroy
      description: |-
        file_type --> main or more or gold
        zip_file --> (zip, rar)
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_admin_course/category/{category_pk}/course/{course_pk}/course_section/{section_pk}/section_question/:
    get:
      operationId: api_admin_course_category_course_course_section_section_question_list
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminSectionQuestion'
          description: ''
    post:
      operationId: api_admin_course_category_course_course_section_section_question_create
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminSectionQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminSectionQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminSectionQuestion'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSectionQuestion'
          description: ''
  /api_admin_course/category/{category_pk}/course/{course_pk}/course_section/{section_pk}/section_question/{id}/:
    get:
      operationId: api_admin_course_category_course_course_section_section_question_retrieve
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSectionQuestion'
          description: ''
    put:
      operationId: api_admin_course_category_course_course_section_section_question_update
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminSectionQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminSectionQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminSectionQuestion'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSectionQuestion'
          description: ''
    patch:
      operationId: api_admin_course_category_course_course_section_section_question_partial_update
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminSectionQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminSectionQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminSectionQuestion'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSectionQuestion'
          description: ''
    delete:
      operationId: api_admin_course_category_course_course_section_section_question_destroy
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  ? /api_admin_course/category/{category_pk}/course/{course_pk}/course_section/{section_pk}/section_question/{section_question_pk}/poll_answer/
  : get:
      operationId: api_admin_course_category_course_course_section_section_question_poll_answer_list
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_question_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AnswerQuestion'
          description: ''
  ? /api_admin_course/category/{category_pk}/course/{course_pk}/course_section/{section_pk}/section_question/{section_question_pk}/poll_answer/{id}/
  : get:
      operationId: api_admin_course_category_course_course_section_section_question_poll_answer_retrieve
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_question_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnswerQuestion'
          description: ''
  /api_admin_course/category/{category_pk}/course/{course_pk}/course_section/{section_pk}/section_video/:
    get:
      operationId: api_admin_course_category_course_course_section_section_video_list
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminSectionVideo'
          description: ''
    post:
      operationId: api_admin_course_category_course_course_section_section_video_create
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminSectionVideo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminSectionVideo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminSectionVideo'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSectionVideo'
          description: ''
  /api_admin_course/category/{category_pk}/course/{course_pk}/course_section/{section_pk}/section_video/{id}/:
    get:
      operationId: api_admin_course_category_course_course_section_section_video_retrieve
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSectionVideo'
          description: ''
    put:
      operationId: api_admin_course_category_course_course_section_section_video_update
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminSectionVideo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminSectionVideo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminSectionVideo'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSectionVideo'
          description: ''
    patch:
      operationId: api_admin_course_category_course_course_section_section_video_partial_update
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminSectionVideo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminSectionVideo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminSectionVideo'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSectionVideo'
          description: ''
    delete:
      operationId: api_admin_course_category_course_course_section_section_video_destroy
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_admin_course/category/{category_pk}/course/{course_pk}/crud_course_type/:
    get:
      operationId: api_admin_course_category_course_crud_course_type_list
      description: plan typ can be set this --> month - year - day
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CrudCourseType'
          description: ''
    post:
      operationId: api_admin_course_category_course_crud_course_type_create
      description: plan typ can be set this --> month - year - day
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrudCourseType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CrudCourseType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CrudCourseType'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrudCourseType'
          description: ''
  /api_admin_course/category/{category_pk}/course/{course_pk}/crud_course_type/{id}/:
    get:
      operationId: api_admin_course_category_course_crud_course_type_retrieve
      description: plan typ can be set this --> month - year - day
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrudCourseType'
          description: ''
    put:
      operationId: api_admin_course_category_course_crud_course_type_update
      description: plan typ can be set this --> month - year - day
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrudCourseType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CrudCourseType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CrudCourseType'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrudCourseType'
          description: ''
    patch:
      operationId: api_admin_course_category_course_crud_course_type_partial_update
      description: plan typ can be set this --> month - year - day
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCrudCourseType'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCrudCourseType'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCrudCourseType'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrudCourseType'
          description: ''
    delete:
      operationId: api_admin_course_category_course_crud_course_type_destroy
      description: plan typ can be set this --> month - year - day
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_admin_course/category/{category_pk}/course/{id}/:
    get:
      operationId: api_admin_course_category_course_retrieve
      description: |-
        pagination --> 20 item
        filter query --> ?course_name=course_name
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCourse'
          description: ''
    put:
      operationId: api_admin_course_category_course_update
      description: |-
        pagination --> 20 item
        filter query --> ?course_name=course_name
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminCourse'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCourse'
          description: ''
    patch:
      operationId: api_admin_course_category_course_partial_update
      description: |-
        pagination --> 20 item
        filter query --> ?course_name=course_name
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminCourse'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCourse'
          description: ''
    delete:
      operationId: api_admin_course_category_course_destroy
      description: |-
        pagination --> 20 item
        filter query --> ?course_name=course_name
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_admin_course/category/{id}/:
    get:
      operationId: api_admin_course_category_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRetrieveCategory'
          description: ''
    put:
      operationId: api_admin_course_category_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCategoryNode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateCategoryNode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateCategoryNode'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCategoryNode'
          description: ''
    patch:
      operationId: api_admin_course_category_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateCategoryNode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateCategoryNode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateCategoryNode'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCategoryNode'
          description: ''
    delete:
      operationId: api_admin_course_category_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_admin_course/course_list/:
    get:
      operationId: api_admin_course_course_list_list
      description: filter query --> ?course_name=course_name
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminCourseList'
          description: ''
  /api_admin_course/course_sign_up/:
    get:
      operationId: api_admin_course_course_sign_up_list
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SignUpCourse'
          description: ''
    post:
      operationId: api_admin_course_course_sign_up_create
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignUpCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignUpCourse'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpCourse'
          description: ''
  /api_admin_course/course_sign_up/{id}/:
    get:
      operationId: api_admin_course_course_sign_up_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this signup course.
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpCourse'
          description: ''
    put:
      operationId: api_admin_course_course_sign_up_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this signup course.
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignUpCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignUpCourse'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpCourse'
          description: ''
    patch:
      operationId: api_admin_course_course_sign_up_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this signup course.
        required: true
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSignUpCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSignUpCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSignUpCourse'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpCourse'
          description: ''
    delete:
      operationId: api_admin_course_course_sign_up_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this signup course.
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_admin_course/present_absent/:
    get:
      operationId: api_admin_course_present_absent_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdminStudentPresentAbsentList'
          description: ''
  /api_admin_course/present_absent/{id}/:
    get:
      operationId: api_admin_course_present_absent_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this present absent.
        required: true
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminStudentPresentAbsent'
          description: ''
  /api_admin_course/student_list_certificate/:
    get:
      operationId: api_admin_course_student_list_certificate_list
      description: filter query --> ?std_phone=student_phone_number
      tags:
      - api_admin_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminStudentListCertificate'
          description: ''
  /api_admin_course/sync_student_access_section/:
    post:
      operationId: api_admin_course_sync_student_access_section_create
      tags:
      - api_admin_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncAdminCreateStudentSection'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SyncAdminCreateStudentSection'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SyncAdminCreateStudentSection'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncAdminCreateStudentSection'
          description: ''
  /api_admin_discount/coupon/:
    get:
      operationId: api_admin_discount_coupon_list
      description: |-
        you can use search field
        ?code=xxxx
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api_admin_discount
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCouponList'
          description: ''
    post:
      operationId: api_admin_discount_coupon_create
      description: |-
        you can use search field
        ?code=xxxx
      tags:
      - api_admin_discount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coupon'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Coupon'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Coupon'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: ''
  /api_admin_discount/coupon/{id}/:
    get:
      operationId: api_admin_discount_coupon_retrieve
      description: |-
        you can use search field
        ?code=xxxx
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this coupon.
        required: true
      tags:
      - api_admin_discount
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: ''
    put:
      operationId: api_admin_discount_coupon_update
      description: |-
        you can use search field
        ?code=xxxx
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this coupon.
        required: true
      tags:
      - api_admin_discount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coupon'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Coupon'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Coupon'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: ''
    patch:
      operationId: api_admin_discount_coupon_partial_update
      description: |-
        you can use search field
        ?code=xxxx
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this coupon.
        required: true
      tags:
      - api_admin_discount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCoupon'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCoupon'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCoupon'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Coupon'
          description: ''
    delete:
      operationId: api_admin_discount_coupon_destroy
      description: |-
        you can use search field
        ?code=xxxx
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this coupon.
        required: true
      tags:
      - api_admin_discount
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_admin_mian_settings/banners/:
    get:
      operationId: api_admin_mian_settings_banners_list
      tags:
      - api_admin_mian_settings
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Banner'
          description: ''
    post:
      operationId: api_admin_mian_settings_banners_create
      tags:
      - api_admin_mian_settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Banner'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Banner'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Banner'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner'
          description: ''
  /api_admin_mian_settings/banners/{id}/:
    get:
      operationId: api_admin_mian_settings_banners_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this banner.
        required: true
      tags:
      - api_admin_mian_settings
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner'
          description: ''
    put:
      operationId: api_admin_mian_settings_banners_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this banner.
        required: true
      tags:
      - api_admin_mian_settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Banner'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Banner'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Banner'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner'
          description: ''
    patch:
      operationId: api_admin_mian_settings_banners_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this banner.
        required: true
      tags:
      - api_admin_mian_settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBanner'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBanner'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBanner'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Banner'
          description: ''
    delete:
      operationId: api_admin_mian_settings_banners_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this banner.
        required: true
      tags:
      - api_admin_mian_settings
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_admin_mian_settings/header_sites/:
    get:
      operationId: api_admin_mian_settings_header_sites_list
      tags:
      - api_admin_mian_settings
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HeaderSite'
          description: ''
    post:
      operationId: api_admin_mian_settings_header_sites_create
      tags:
      - api_admin_mian_settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HeaderSite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HeaderSite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HeaderSite'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeaderSite'
          description: ''
  /api_admin_mian_settings/header_sites/{id}/:
    get:
      operationId: api_admin_mian_settings_header_sites_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this header site.
        required: true
      tags:
      - api_admin_mian_settings
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeaderSite'
          description: ''
    put:
      operationId: api_admin_mian_settings_header_sites_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this header site.
        required: true
      tags:
      - api_admin_mian_settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HeaderSite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HeaderSite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HeaderSite'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeaderSite'
          description: ''
    patch:
      operationId: api_admin_mian_settings_header_sites_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this header site.
        required: true
      tags:
      - api_admin_mian_settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedHeaderSite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedHeaderSite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedHeaderSite'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HeaderSite'
          description: ''
    delete:
      operationId: api_admin_mian_settings_header_sites_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this header site.
        required: true
      tags:
      - api_admin_mian_settings
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_advertise/answered/:
    get:
      operationId: api_advertise_answered_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api_advertise
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedConsultationRequestAnswerList'
          description: ''
  /api_advertise/answered/{id}/:
    get:
      operationId: api_advertise_answered_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this consultation request.
        required: true
      tags:
      - api_advertise
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationRequestAnswer'
          description: ''
    put:
      operationId: api_advertise_answered_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this consultation request.
        required: true
      tags:
      - api_advertise
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsultationRequestAnswer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConsultationRequestAnswer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConsultationRequestAnswer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationRequestAnswer'
          description: ''
    patch:
      operationId: api_advertise_answered_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this consultation request.
        required: true
      tags:
      - api_advertise
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedConsultationRequestAnswer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedConsultationRequestAnswer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedConsultationRequestAnswer'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationRequestAnswer'
          description: ''
    delete:
      operationId: api_advertise_answered_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this consultation request.
        required: true
      tags:
      - api_advertise
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_advertise/request/:
    get:
      operationId: api_advertise_request_list
      tags:
      - api_advertise
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserConsultationRequest'
          description: ''
    post:
      operationId: api_advertise_request_create
      tags:
      - api_advertise
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserConsultationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserConsultationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserConsultationRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserConsultationRequest'
          description: ''
  /api_advertise/request/{id}/:
    get:
      operationId: api_advertise_request_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this consultation request.
        required: true
      tags:
      - api_advertise
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserConsultationRequest'
          description: ''
    put:
      operationId: api_advertise_request_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this consultation request.
        required: true
      tags:
      - api_advertise
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserConsultationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserConsultationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserConsultationRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserConsultationRequest'
          description: ''
    patch:
      operationId: api_advertise_request_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this consultation request.
        required: true
      tags:
      - api_advertise
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserConsultationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserConsultationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserConsultationRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserConsultationRequest'
          description: ''
    delete:
      operationId: api_advertise_request_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this consultation request.
        required: true
      tags:
      - api_advertise
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_advertise/schedule/:
    get:
      operationId: api_advertise_schedule_list
      tags:
      - api_advertise
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConsultationSchedule'
          description: ''
    post:
      operationId: api_advertise_schedule_create
      tags:
      - api_advertise
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsultationSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConsultationSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConsultationSchedule'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationSchedule'
          description: ''
  /api_advertise/schedule/{id}/:
    get:
      operationId: api_advertise_schedule_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this consultation schedule.
        required: true
      tags:
      - api_advertise
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationSchedule'
          description: ''
    put:
      operationId: api_advertise_schedule_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this consultation schedule.
        required: true
      tags:
      - api_advertise
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsultationSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConsultationSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConsultationSchedule'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationSchedule'
          description: ''
    patch:
      operationId: api_advertise_schedule_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this consultation schedule.
        required: true
      tags:
      - api_advertise
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedConsultationSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedConsultationSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedConsultationSchedule'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationSchedule'
          description: ''
    delete:
      operationId: api_advertise_schedule_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this consultation schedule.
        required: true
      tags:
      - api_advertise
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_advertise/slot/:
    get:
      operationId: api_advertise_slot_list
      tags:
      - api_advertise
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConsultationSlot'
          description: ''
    post:
      operationId: api_advertise_slot_create
      tags:
      - api_advertise
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsultationSlot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConsultationSlot'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConsultationSlot'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationSlot'
          description: ''
  /api_advertise/slot/{id}/:
    get:
      operationId: api_advertise_slot_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this consultation slot.
        required: true
      tags:
      - api_advertise
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationSlot'
          description: ''
    put:
      operationId: api_advertise_slot_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this consultation slot.
        required: true
      tags:
      - api_advertise
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsultationSlot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConsultationSlot'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConsultationSlot'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationSlot'
          description: ''
    patch:
      operationId: api_advertise_slot_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this consultation slot.
        required: true
      tags:
      - api_advertise
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedConsultationSlot'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedConsultationSlot'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedConsultationSlot'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationSlot'
          description: ''
    delete:
      operationId: api_advertise_slot_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this consultation slot.
        required: true
      tags:
      - api_advertise
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_advertise/topic/:
    get:
      operationId: api_advertise_topic_list
      tags:
      - api_advertise
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConsultationTopic'
          description: ''
    post:
      operationId: api_advertise_topic_create
      tags:
      - api_advertise
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsultationTopic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConsultationTopic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConsultationTopic'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationTopic'
          description: ''
  /api_advertise/topic/{id}/:
    get:
      operationId: api_advertise_topic_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this consultation topic.
        required: true
      tags:
      - api_advertise
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationTopic'
          description: ''
    put:
      operationId: api_advertise_topic_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this consultation topic.
        required: true
      tags:
      - api_advertise
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsultationTopic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConsultationTopic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConsultationTopic'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationTopic'
          description: ''
    patch:
      operationId: api_advertise_topic_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this consultation topic.
        required: true
      tags:
      - api_advertise
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedConsultationTopic'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedConsultationTopic'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedConsultationTopic'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsultationTopic'
          description: ''
    delete:
      operationId: api_advertise_topic_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this consultation topic.
        required: true
      tags:
      - api_advertise
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_auth_user/best_student/:
    get:
      operationId: api_auth_user_best_student_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api_auth_user
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedListBestStudentList'
          description: ''
  /api_auth_user/best_student/{id}/:
    get:
      operationId: api_auth_user_best_student_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this best student.
        required: true
      tags:
      - api_auth_user
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBestStudent'
          description: ''
  /api_auth_user/city-list/:
    get:
      operationId: api_auth_user_city_list_retrieve
      tags:
      - api_auth_user
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
          description: ''
  /api_auth_user/city-list/{id}/:
    get:
      operationId: api_auth_user_city_list_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api_auth_user
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
          description: ''
  /api_auth_user/login/:
    post:
      operationId: api_auth_user_login_create
      tags:
      - api_auth_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogin'
          description: ''
  /api_auth_user/otp_phone/:
    post:
      operationId: api_auth_user_otp_phone_create
      tags:
      - api_auth_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPhone'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestPhone'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestPhone'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestPhone'
          description: ''
  /api_auth_user/otp_phone_verify/:
    post:
      operationId: api_auth_user_otp_phone_verify_create
      tags:
      - api_auth_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPhoneVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestPhoneVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestPhoneVerify'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestPhoneVerify'
          description: ''
  /api_auth_user/state-list/:
    get:
      operationId: api_auth_user_state_list_retrieve
      tags:
      - api_auth_user
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
          description: ''
  /api_auth_user/state-list/{id}/:
    get:
      operationId: api_auth_user_state_list_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api_auth_user
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/State'
          description: ''
  /api_auth_user/state/{id}/city/:
    get:
      operationId: api_auth_user_state_city_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api_auth_user
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/City'
          description: ''
  /api_auth_user/ticket_room/:
    get:
      operationId: api_auth_user_ticket_room_list
      parameters:
      - in: query
        name: close
        schema:
          type: string
        description: return all ticket room is close yes or no
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api_auth_user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTickerRoomList'
          description: ''
    post:
      operationId: api_auth_user_ticket_room_create
      tags:
      - api_auth_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TickerRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TickerRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TickerRoom'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TickerRoom'
          description: ''
  /api_auth_user/ticket_room/{id}/:
    get:
      operationId: api_auth_user_ticket_room_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_auth_user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TickerRoom'
          description: ''
    put:
      operationId: api_auth_user_ticket_room_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_auth_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TickerRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TickerRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TickerRoom'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TickerRoom'
          description: ''
    patch:
      operationId: api_auth_user_ticket_room_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_auth_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTickerRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTickerRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTickerRoom'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TickerRoom'
          description: ''
    delete:
      operationId: api_auth_user_ticket_room_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_auth_user
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_auth_user/ticket_room/{ticket_room_pk}/ticket_chat/:
    get:
      operationId: api_auth_user_ticket_room_ticket_chat_list
      description: send ticket user to admin
      parameters:
      - in: path
        name: ticket_room_pk
        schema:
          type: string
        required: true
      tags:
      - api_auth_user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'
          description: ''
    post:
      operationId: api_auth_user_ticket_room_ticket_chat_create
      description: send ticket user to admin
      parameters:
      - in: path
        name: ticket_room_pk
        schema:
          type: string
        required: true
      tags:
      - api_auth_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ticket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ticket'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
  /api_auth_user/ticket_room/{ticket_room_pk}/ticket_chat/{id}/:
    get:
      operationId: api_auth_user_ticket_room_ticket_chat_retrieve
      description: send ticket user to admin
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: ticket_room_pk
        schema:
          type: string
        required: true
      tags:
      - api_auth_user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    put:
      operationId: api_auth_user_ticket_room_ticket_chat_update
      description: send ticket user to admin
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: ticket_room_pk
        schema:
          type: string
        required: true
      tags:
      - api_auth_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ticket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ticket'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    patch:
      operationId: api_auth_user_ticket_room_ticket_chat_partial_update
      description: send ticket user to admin
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: ticket_room_pk
        schema:
          type: string
        required: true
      tags:
      - api_auth_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTicket'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTicket'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTicket'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
          description: ''
    delete:
      operationId: api_auth_user_ticket_room_ticket_chat_destroy
      description: send ticket user to admin
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: ticket_room_pk
        schema:
          type: string
        required: true
      tags:
      - api_auth_user
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_auth_user/user/:
    get:
      operationId: api_auth_user_user_list
      parameters:
      - in: query
        name: city__city__icontains
        schema:
          type: string
      - in: query
        name: email__iexact
        schema:
          type: string
      - in: query
        name: first_name__icontains
        schema:
          type: string
      - in: query
        name: is_active
        schema:
          type: boolean
      - in: query
        name: last_name__icontains
        schema:
          type: string
      - in: query
        name: mobile_phone__iexact
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: state__state_name__icontains
        schema:
          type: string
      tags:
      - api_auth_user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: api_auth_user_user_create
      tags:
      - api_auth_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api_auth_user/user/{id}/:
    get:
      operationId: api_auth_user_user_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this کاربر.
        required: true
      tags:
      - api_auth_user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_auth_user_user_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this کاربر.
        required: true
      tags:
      - api_auth_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateUser'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUser'
          description: ''
    patch:
      operationId: api_auth_user_user_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this کاربر.
        required: true
      tags:
      - api_auth_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUser'
          description: ''
    delete:
      operationId: api_auth_user_user_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this کاربر.
        required: true
      tags:
      - api_auth_user
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_auth_user/user/change-password/:
    post:
      operationId: api_auth_user_user_change_password_create
      tags:
      - api_auth_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
  /api_auth_user/user/confirm-forget-password/:
    post:
      operationId: api_auth_user_user_confirm_forget_password_create
      tags:
      - api_auth_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmForgetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfirmForgetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfirmForgetPassword'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmForgetPassword'
          description: ''
  /api_auth_user/user/forget-password/:
    post:
      operationId: api_auth_user_user_forget_password_create
      tags:
      - api_auth_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ForgetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ForgetPassword'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForgetPassword'
          description: ''
  /api_auth_user/user_notification/:
    get:
      operationId: api_auth_user_user_notification_list
      description: |-
        for filter notification

        you can use

        ?read=True

        ?read=False
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api_auth_user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserNotificationList'
          description: ''
    post:
      operationId: api_auth_user_user_notification_create
      description: |-
        for filter notification

        you can use

        ?read=True

        ?read=False
      tags:
      - api_auth_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserNotification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateUserNotification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateUserNotification'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserNotification'
          description: ''
  /api_auth_user/user_notification/{id}/:
    get:
      operationId: api_auth_user_user_notification_retrieve
      description: |-
        for filter notification

        you can use

        ?read=True

        ?read=False
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_auth_user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotification'
          description: ''
    put:
      operationId: api_auth_user_user_notification_update
      description: |-
        for filter notification

        you can use

        ?read=True

        ?read=False
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_auth_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserNotification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateUserNotification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateUserNotification'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserNotification'
          description: ''
    patch:
      operationId: api_auth_user_user_notification_partial_update
      description: |-
        for filter notification

        you can use

        ?read=True

        ?read=False
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_auth_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPatchUserNotification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPatchUserNotification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPatchUserNotification'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchUserNotification'
          description: ''
    delete:
      operationId: api_auth_user_user_notification_destroy
      description: |-
        for filter notification

        you can use

        ?read=True

        ?read=False
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_auth_user
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_auth_user/validate_token/:
    post:
      operationId: api_auth_user_validate_token_create
      tags:
      - api_auth_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ValidateToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ValidateToken'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateToken'
          description: ''
  /api_blog/categories/:
    get:
      operationId: api_blog_categories_list
      tags:
      - api_blog
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryBlog'
          description: ''
    post:
      operationId: api_blog_categories_create
      tags:
      - api_blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateCategory'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCategory'
          description: ''
  /api_blog/categories/{category_pk}/posts/:
    get:
      operationId: api_blog_categories_posts_list
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api_blog
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostBlog'
          description: ''
    post:
      operationId: api_blog_categories_posts_create
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      tags:
      - api_blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostBlog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostBlog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostBlog'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostBlog'
          description: ''
  /api_blog/categories/{category_pk}/posts/{id}/:
    get:
      operationId: api_blog_categories_posts_retrieve
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_blog
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostBlog'
          description: ''
    put:
      operationId: api_blog_categories_posts_update
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostBlog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostBlog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostBlog'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostBlog'
          description: ''
    patch:
      operationId: api_blog_categories_posts_partial_update
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPostBlog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPostBlog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPostBlog'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostBlog'
          description: ''
    delete:
      operationId: api_blog_categories_posts_destroy
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_blog
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_blog/categories/{category_pk}/posts/{id}/increment_read_count/:
    post:
      operationId: api_blog_categories_posts_increment_read_count_create
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostBlog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostBlog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostBlog'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostBlog'
          description: ''
  /api_blog/categories/{category_pk}/posts/{id}/like/:
    post:
      operationId: api_blog_categories_posts_like_create
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostBlog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PostBlog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PostBlog'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostBlog'
          description: ''
  /api_blog/categories/{category_pk}/posts/{post_pk}/comments/:
    get:
      operationId: api_blog_categories_posts_comments_list
      description: filter query --> ?is_pined=1 (1 equal comment is pined)
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: post_pk
        schema:
          type: string
        required: true
      tags:
      - api_blog
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentBlog'
          description: ''
    post:
      operationId: api_blog_categories_posts_comments_create
      description: filter query --> ?is_pined=1 (1 equal comment is pined)
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: post_pk
        schema:
          type: string
        required: true
      tags:
      - api_blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentBlog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CommentBlog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CommentBlog'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentBlog'
          description: ''
  /api_blog/categories/{category_pk}/posts/{post_pk}/comments/{id}/:
    get:
      operationId: api_blog_categories_posts_comments_retrieve
      description: filter query --> ?is_pined=1 (1 equal comment is pined)
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: post_pk
        schema:
          type: string
        required: true
      tags:
      - api_blog
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentBlog'
          description: ''
    put:
      operationId: api_blog_categories_posts_comments_update
      description: filter query --> ?is_pined=1 (1 equal comment is pined)
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: post_pk
        schema:
          type: string
        required: true
      tags:
      - api_blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentBlog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CommentBlog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CommentBlog'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentBlog'
          description: ''
    patch:
      operationId: api_blog_categories_posts_comments_partial_update
      description: filter query --> ?is_pined=1 (1 equal comment is pined)
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: post_pk
        schema:
          type: string
        required: true
      tags:
      - api_blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCommentBlog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCommentBlog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCommentBlog'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentBlog'
          description: ''
    delete:
      operationId: api_blog_categories_posts_comments_destroy
      description: filter query --> ?is_pined=1 (1 equal comment is pined)
      parameters:
      - in: path
        name: category_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: post_pk
        schema:
          type: string
        required: true
      tags:
      - api_blog
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_blog/categories/{id}/:
    get:
      operationId: api_blog_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category blog.
        required: true
      tags:
      - api_blog
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryBlog'
          description: ''
    put:
      operationId: api_blog_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category blog.
        required: true
      tags:
      - api_blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryBlog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryBlog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryBlog'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryBlog'
          description: ''
    patch:
      operationId: api_blog_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category blog.
        required: true
      tags:
      - api_blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategoryBlog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategoryBlog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategoryBlog'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryBlog'
          description: ''
    delete:
      operationId: api_blog_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category blog.
        required: true
      tags:
      - api_blog
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_blog/favourites/:
    get:
      operationId: api_blog_favourites_list
      tags:
      - api_blog
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FavouritePost'
          description: ''
    post:
      operationId: api_blog_favourites_create
      tags:
      - api_blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FavouritePost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FavouritePost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FavouritePost'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavouritePost'
          description: ''
  /api_blog/favourites/{id}/:
    get:
      operationId: api_blog_favourites_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_blog
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavouritePost'
          description: ''
    put:
      operationId: api_blog_favourites_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FavouritePost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FavouritePost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FavouritePost'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavouritePost'
          description: ''
    patch:
      operationId: api_blog_favourites_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFavouritePost'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFavouritePost'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFavouritePost'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FavouritePost'
          description: ''
    delete:
      operationId: api_blog_favourites_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_blog
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_blog/tags/:
    get:
      operationId: api_blog_tags_list
      parameters:
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - api_blog
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagBlog'
          description: ''
    post:
      operationId: api_blog_tags_create
      tags:
      - api_blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagBlog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagBlog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagBlog'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagBlog'
          description: ''
  /api_blog/tags/{id}/:
    get:
      operationId: api_blog_tags_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag blog.
        required: true
      tags:
      - api_blog
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagBlog'
          description: ''
    put:
      operationId: api_blog_tags_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag blog.
        required: true
      tags:
      - api_blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagBlog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagBlog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagBlog'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagBlog'
          description: ''
    patch:
      operationId: api_blog_tags_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag blog.
        required: true
      tags:
      - api_blog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagBlog'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagBlog'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagBlog'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagBlog'
          description: ''
    delete:
      operationId: api_blog_tags_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tag blog.
        required: true
      tags:
      - api_blog
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_coupon/validate_coupon_code/:
    get:
      operationId: api_coupon_validate_coupon_code_retrieve
      description: |-
        send code into query_params
        ?code=code
      tags:
      - api_coupon
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateCouponCode'
          description: ''
  /api_course/all_course/:
    get:
      operationId: api_course_all_course_list
      description: |-
        pagination --> 20 item
        search --> ?name=course_name
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api_course
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAllCourseList'
          description: ''
  /api_course/all_course/{id}/:
    get:
      operationId: api_course_all_course_retrieve
      description: |-
        pagination --> 20 item
        search --> ?name=course_name
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this course.
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllCourse'
          description: ''
  /api_course/coach_lesson_course/:
    get:
      operationId: api_course_coach_lesson_course_list
      parameters:
      - in: query
        name: class_name
        schema:
          type: string
        description: The name of the purchase.
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: progress_lesson
        schema:
          type: string
        description: The name of the progress lesson.
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedListCoachLessonCourseList'
          description: ''
  /api_course/coach_lesson_course/{coach_lesson_course_pk}/call_lesson_course/:
    get:
      operationId: api_course_coach_lesson_course_call_lesson_course_list
      description: status --> [successful, un_successful]
      parameters:
      - in: path
        name: coach_lesson_course_pk
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCallLessonCourseList'
          description: ''
    post:
      operationId: api_course_coach_lesson_course_call_lesson_course_create
      description: status --> [successful, un_successful]
      parameters:
      - in: path
        name: coach_lesson_course_pk
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallLessonCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallLessonCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CallLessonCourse'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallLessonCourse'
          description: ''
  /api_course/coach_lesson_course/{coach_lesson_course_pk}/call_lesson_course/{id}/:
    get:
      operationId: api_course_coach_lesson_course_call_lesson_course_retrieve
      description: status --> [successful, un_successful]
      parameters:
      - in: path
        name: coach_lesson_course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallLessonCourse'
          description: ''
    put:
      operationId: api_course_coach_lesson_course_call_lesson_course_update
      description: status --> [successful, un_successful]
      parameters:
      - in: path
        name: coach_lesson_course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallLessonCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CallLessonCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CallLessonCourse'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallLessonCourse'
          description: ''
    patch:
      operationId: api_course_coach_lesson_course_call_lesson_course_partial_update
      description: status --> [successful, un_successful]
      parameters:
      - in: path
        name: coach_lesson_course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCallLessonCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCallLessonCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCallLessonCourse'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CallLessonCourse'
          description: ''
    delete:
      operationId: api_course_coach_lesson_course_call_lesson_course_destroy
      description: status --> [successful, un_successful]
      parameters:
      - in: path
        name: coach_lesson_course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_course/coach_lesson_course/{coach_lesson_course_pk}/coach_comment/:
    get:
      operationId: api_course_coach_lesson_course_coach_comment_list
      description: |-
        pagination --> 20 item
        permission --> is owner (everybody can delete, update own comment)
      parameters:
      - in: path
        name: coach_lesson_course_pk
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCommentList'
          description: ''
    post:
      operationId: api_course_coach_lesson_course_coach_comment_create
      description: |-
        pagination --> 20 item
        permission --> is owner (everybody can delete, update own comment)
      parameters:
      - in: path
        name: coach_lesson_course_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /api_course/coach_lesson_course/{coach_lesson_course_pk}/coach_comment/{id}/:
    get:
      operationId: api_course_coach_lesson_course_coach_comment_retrieve
      description: |-
        pagination --> 20 item
        permission --> is owner (everybody can delete, update own comment)
      parameters:
      - in: path
        name: coach_lesson_course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    put:
      operationId: api_course_coach_lesson_course_coach_comment_update
      description: |-
        pagination --> 20 item
        permission --> is owner (everybody can delete, update own comment)
      parameters:
      - in: path
        name: coach_lesson_course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    patch:
      operationId: api_course_coach_lesson_course_coach_comment_partial_update
      description: |-
        pagination --> 20 item
        permission --> is owner (everybody can delete, update own comment)
      parameters:
      - in: path
        name: coach_lesson_course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    delete:
      operationId: api_course_coach_lesson_course_coach_comment_destroy
      description: |-
        pagination --> 20 item
        permission --> is owner (everybody can delete, update own comment)
      parameters:
      - in: path
        name: coach_lesson_course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_course/coach_lesson_course/{coach_lesson_course_pk}/online_link/:
    get:
      operationId: api_course_coach_lesson_course_online_link_list
      parameters:
      - in: path
        name: coach_lesson_course_pk
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOnlineLinkList'
          description: ''
    post:
      operationId: api_course_coach_lesson_course_online_link_create
      parameters:
      - in: path
        name: coach_lesson_course_pk
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnlineLink'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OnlineLink'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OnlineLink'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnlineLink'
          description: ''
  /api_course/coach_lesson_course/{coach_lesson_course_pk}/online_link/{id}/:
    get:
      operationId: api_course_coach_lesson_course_online_link_retrieve
      parameters:
      - in: path
        name: coach_lesson_course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnlineLink'
          description: ''
    put:
      operationId: api_course_coach_lesson_course_online_link_update
      parameters:
      - in: path
        name: coach_lesson_course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnlineLink'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OnlineLink'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OnlineLink'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnlineLink'
          description: ''
    patch:
      operationId: api_course_coach_lesson_course_online_link_partial_update
      parameters:
      - in: path
        name: coach_lesson_course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOnlineLink'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOnlineLink'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOnlineLink'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnlineLink'
          description: ''
    delete:
      operationId: api_course_coach_lesson_course_online_link_destroy
      parameters:
      - in: path
        name: coach_lesson_course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_course/coach_lesson_course/{coach_lesson_course_pk}/student_list/:
    get:
      operationId: api_course_coach_lesson_course_student_list_list
      parameters:
      - in: path
        name: coach_lesson_course_pk
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentLessonCourse'
          description: ''
  /api_course/coach_lesson_course/{coach_lesson_course_pk}/student_list/{id}/:
    get:
      operationId: api_course_coach_lesson_course_student_list_retrieve
      parameters:
      - in: path
        name: coach_lesson_course_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentLessonCourse'
          description: ''
  /api_course/coach_lesson_course/{id}/:
    get:
      operationId: api_course_coach_lesson_course_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCoachLessonCourse'
          description: ''
  /api_course/coach_lesson_course/{id}/sections/:
    get:
      operationId: api_course_coach_lesson_course_sections_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachSection'
          description: ''
  /api_course/coach_lesson_course/{id}/sections/{section_pk}/present_absent/:
    get:
      operationId: api_course_coach_lesson_course_sections_present_absent_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCoachPresentAbsent'
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachPresentAbsent'
          description: ''
    post:
      operationId: api_course_coach_lesson_course_sections_present_absent_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCoachPresentAbsent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateCoachPresentAbsent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateCoachPresentAbsent'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCoachPresentAbsent'
          description: ''
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachPresentAbsent'
          description: ''
  /api_course/coach_lesson_course/{id}/sections/{section_pk}/present_absent/{present_absent_pk}/:
    get:
      operationId: api_course_coach_lesson_course_sections_present_absent_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: present_absent_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachPresentAbsent'
          description: ''
    put:
      operationId: api_course_coach_lesson_course_sections_present_absent_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: present_absent_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoachPresentAbsent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CoachPresentAbsent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CoachPresentAbsent'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachPresentAbsent'
          description: ''
    patch:
      operationId: api_course_coach_lesson_course_sections_present_absent_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: present_absent_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCoachPresentAbsent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCoachPresentAbsent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCoachPresentAbsent'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachPresentAbsent'
          description: ''
    delete:
      operationId: api_course_coach_lesson_course_sections_present_absent_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: present_absent_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachPresentAbsent'
          description: ''
  /api_course/coach_lesson_course/{id}/sections/{section_pk}/score/{score_pk}/:
    get:
      operationId: api_course_coach_lesson_course_sections_score_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: score_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachSendFile'
          description: ''
    put:
      operationId: api_course_coach_lesson_course_sections_score_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: score_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCoachLessonCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ListCoachLessonCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ListCoachLessonCourse'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachSendFile'
          description: ''
    patch:
      operationId: api_course_coach_lesson_course_sections_score_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: score_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedListCoachLessonCourse'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedListCoachLessonCourse'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedListCoachLessonCourse'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachSendFile'
          description: ''
    delete:
      operationId: api_course_coach_lesson_course_sections_score_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: score_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachSendFile'
          description: ''
  /api_course/coach_lesson_course/{id}/sections/{section_pk}/section_file/:
    get:
      operationId: api_course_coach_lesson_course_sections_section_file_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachSectionFile'
          description: ''
  /api_course/coach_lesson_course/{id}/sections/{section_pk}/section_file/{section_file_pk}/:
    get:
      operationId: api_course_coach_lesson_course_sections_section_file_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_file_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachSectionFile'
          description: ''
  /api_course/coach_lesson_course/{id}/sections/{section_pk}/student_send_files/:
    get:
      operationId: api_course_coach_lesson_course_sections_student_send_files_retrieve
      parameters:
      - in: query
        name: file_status
        schema:
          type: string
        description: searching into filed send_file_status --> [sending, accept_to_wait,
          accepted]
      - in: query
        name: file_type
        schema:
          type: string
        description: searching the file type --> [main, more_then]
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachStudentSendFiles'
          description: ''
  /api_course/coach_lesson_course/{id}/sections/{section_pk}/student_send_files/{student_send_files_pk}/:
    get:
      operationId: api_course_coach_lesson_course_sections_student_send_files_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      - in: path
        name: student_send_files_pk
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachStudentSendFiles'
          description: ''
    put:
      operationId: api_course_coach_lesson_course_sections_student_send_files_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      - in: path
        name: student_send_files_pk
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCoachStudentSendFiles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateCoachStudentSendFiles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateCoachStudentSendFiles'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachStudentSendFiles'
          description: ''
    patch:
      operationId: api_course_coach_lesson_course_sections_student_send_files_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      - in: path
        name: student_send_files_pk
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateCoachStudentSendFiles'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateCoachStudentSendFiles'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateCoachStudentSendFiles'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoachStudentSendFiles'
          description: ''
  /api_course/coach_lesson_course/{id}/sections/{section_pk}/videos/:
    get:
      operationId: api_course_coach_lesson_course_sections_videos_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseSectionVideo'
          description: ''
  /api_course/home_category/:
    get:
      operationId: api_course_home_category_list
      tags:
      - api_course
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HomeCategory'
          description: ''
  /api_course/home_category/{home_category_pk}/home_course/:
    get:
      operationId: api_course_home_category_home_course_list
      description: |-
        course_type is (basic, indeterminate, advanced),

        for search filed you can use in url
        ?course_type=basic or ?course_type=indeterminate or ?course_type=advanced
      parameters:
      - in: path
        name: home_category_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HomeCourse'
          description: ''
  /api_course/home_category/{home_category_pk}/home_course/{id}/:
    get:
      operationId: api_course_home_category_home_course_retrieve
      description: |-
        course_type is (basic, indeterminate, advanced),

        for search filed you can use in url
        ?course_type=basic or ?course_type=indeterminate or ?course_type=advanced
      parameters:
      - in: path
        name: home_category_pk
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeCourse'
          description: ''
  /api_course/home_category/{id}/:
    get:
      operationId: api_course_home_category_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomeCategory'
          description: ''
  /api_course/poll_answer/:
    post:
      operationId: api_course_poll_answer_create
      tags:
      - api_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerSectionQuestion'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnswerSectionQuestion'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnswerSectionQuestion'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnswerSectionQuestion'
          description: ''
  /api_course/send_notification_when_user_send_file/:
    post:
      operationId: api_course_send_notification_when_user_send_file_create
      tags:
      - api_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendNotificationUserSendSectionFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendNotificationUserSendSectionFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendNotificationUserSendSectionFile'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendNotificationUserSendSectionFile'
          description: ''
  /api_course/student_coach_lesson_course/:
    get:
      operationId: api_course_student_coach_lesson_course_list
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentLessonCourse'
          description: ''
  /api_course/student_coach_lesson_course/{id}/:
    get:
      operationId: api_course_student_coach_lesson_course_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_coach_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentLessonCourse'
          description: ''
  /api_course/student_lesson_course/:
    get:
      operationId: api_course_student_lesson_course_list
      parameters:
      - in: query
        name: class_name
        schema:
          type: string
        description: The name of the purchase.
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: progress_lesson
        schema:
          type: string
        description: The name of the progress lesson.
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessonCourseList'
          description: ''
  /api_course/student_lesson_course/{id}/:
    get:
      operationId: api_course_student_lesson_course_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonCourse'
          description: ''
  /api_course/student_lesson_course/{id}/sections/:
    get:
      operationId: api_course_student_lesson_course_sections_list
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentAccessSectionList'
          description: ''
  /api_course/student_lesson_course/{id}/sections/{section_pk}/:
    get:
      operationId: api_course_student_lesson_course_sections_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentAccessSectionDetail'
          description: ''
  /api_course/student_lesson_course/{id}/sections/{section_pk}/certificate/:
    get:
      operationId: api_course_student_lesson_course_sections_certificate_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
          description: ''
  /api_course/student_lesson_course/{id}/sections/{section_pk}/poll/:
    get:
      operationId: api_course_student_lesson_course_sections_poll_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionQuestion'
          description: ''
  /api_course/student_lesson_course/{id}/sections/{section_pk}/present_absent/:
    get:
      operationId: api_course_student_lesson_course_sections_present_absent_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentPresentAbsent'
          description: ''
  /api_course/student_lesson_course/{id}/sections/{section_pk}/score/:
    get:
      operationId: api_course_student_lesson_course_sections_score_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionScore'
          description: ''
  /api_course/student_lesson_course/{id}/sections/{section_pk}/section_file/:
    get:
      operationId: api_course_student_lesson_course_sections_section_file_retrieve
      description: file_type --> main or more (mian = اصلی) (more = اضافی) (gold =
        طلایی)
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseSectionFile'
          description: ''
  /api_course/student_lesson_course/{id}/sections/{section_pk}/section_file/{section_file_pk}/:
    get:
      operationId: api_course_student_lesson_course_sections_section_file_retrieve_2
      description: file_type --> main or more (mian = اصلی) (more = اضافی) (gold =
        طلایی)
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_file_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseSectionFile'
          description: ''
  /api_course/student_lesson_course/{id}/sections/{section_pk}/section_file/{section_file_pk}/send_file/:
    get:
      operationId: api_course_student_lesson_course_sections_section_file_send_file_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_file_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendFile'
          description: ''
    post:
      operationId: api_course_student_lesson_course_sections_section_file_send_file_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_file_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendFile'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendFile'
          description: ''
  /api_course/student_lesson_course/{id}/sections/{section_pk}/section_file/{section_file_pk}/send_file/{send_file_pk}/:
    get:
      operationId: api_course_student_lesson_course_sections_section_file_send_file_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_file_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      - in: path
        name: send_file_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendFile'
          description: ''
    put:
      operationId: api_course_student_lesson_course_sections_section_file_send_file_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_file_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      - in: path
        name: send_file_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendFile'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendFile'
          description: ''
    patch:
      operationId: api_course_student_lesson_course_sections_section_file_send_file_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_file_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      - in: path
        name: send_file_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSendFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSendFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSendFile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendFile'
          description: ''
    delete:
      operationId: api_course_student_lesson_course_sections_section_file_send_file_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_file_pk
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      - in: path
        name: send_file_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendFile'
          description: ''
  /api_course/student_lesson_course/{id}/sections/{section_pk}/videos/:
    get:
      operationId: api_course_student_lesson_course_sections_videos_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: section_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseSectionVideo'
          description: ''
  /api_course/student_lesson_course/{student_lesson_course_pk}/student_comment/:
    get:
      operationId: api_course_student_lesson_course_student_comment_list
      description: |-
        pagination --> 20 item
        permission --> is owner (everybody can delete, update own comment)
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: student_lesson_course_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCommentList'
          description: ''
    post:
      operationId: api_course_student_lesson_course_student_comment_create
      description: |-
        pagination --> 20 item
        permission --> is owner (everybody can delete, update own comment)
      parameters:
      - in: path
        name: student_lesson_course_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /api_course/student_lesson_course/{student_lesson_course_pk}/student_comment/{id}/:
    get:
      operationId: api_course_student_lesson_course_student_comment_retrieve
      description: |-
        pagination --> 20 item
        permission --> is owner (everybody can delete, update own comment)
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: student_lesson_course_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    put:
      operationId: api_course_student_lesson_course_student_comment_update
      description: |-
        pagination --> 20 item
        permission --> is owner (everybody can delete, update own comment)
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: student_lesson_course_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    patch:
      operationId: api_course_student_lesson_course_student_comment_partial_update
      description: |-
        pagination --> 20 item
        permission --> is owner (everybody can delete, update own comment)
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: student_lesson_course_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedComment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedComment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
    delete:
      operationId: api_course_student_lesson_course_student_comment_destroy
      description: |-
        pagination --> 20 item
        permission --> is owner (everybody can delete, update own comment)
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: student_lesson_course_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_course/student_lesson_course/{student_lesson_course_pk}/student_list_present_absent/:
    get:
      operationId: api_course_student_lesson_course_student_list_present_absent_list
      parameters:
      - in: path
        name: student_lesson_course_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StudentListPresentAbsent'
          description: ''
  /api_course/student_lesson_course/{student_lesson_course_pk}/student_list_present_absent/{id}/:
    get:
      operationId: api_course_student_lesson_course_student_list_present_absent_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      - in: path
        name: student_lesson_course_pk
        schema:
          type: string
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentListPresentAbsent'
          description: ''
  /api_course/student_lesson_course/{student_lesson_course_pk}/student_online_link/:
    get:
      operationId: api_course_student_lesson_course_student_online_link_retrieve
      parameters:
      - in: path
        name: student_lesson_course_pk
        schema:
          type: integer
        required: true
      tags:
      - api_course
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentOnlineLink'
          description: ''
  /api_discount/discounts/:
    get:
      operationId: api_discount_discounts_list
      tags:
      - api_discount
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Discount'
          description: ''
    post:
      operationId: api_discount_discounts_create
      tags:
      - api_discount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Discount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Discount'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
  /api_discount/discounts/{id}/:
    get:
      operationId: api_discount_discounts_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this تخفیف.
        required: true
      tags:
      - api_discount
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    put:
      operationId: api_discount_discounts_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this تخفیف.
        required: true
      tags:
      - api_discount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Discount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Discount'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    patch:
      operationId: api_discount_discounts_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this تخفیف.
        required: true
      tags:
      - api_discount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDiscount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDiscount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDiscount'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    delete:
      operationId: api_discount_discounts_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this تخفیف.
        required: true
      tags:
      - api_discount
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_discount/first_one_coupon/:
    get:
      operationId: api_discount_first_one_coupon_list
      tags:
      - api_discount
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FirstOneCoupon'
          description: ''
  /api_images/images/:
    get:
      operationId: api_images_images_list
      tags:
      - api_images
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Image'
          description: ''
    post:
      operationId: api_images_images_create
      tags:
      - api_images
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
  /api_images/images/{id}/:
    get:
      operationId: api_images_images_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Image.
        required: true
      tags:
      - api_images
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
    put:
      operationId: api_images_images_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Image.
        required: true
      tags:
      - api_images
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Image'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Image'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Image'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
    patch:
      operationId: api_images_images_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Image.
        required: true
      tags:
      - api_images
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedImage'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Image'
          description: ''
    delete:
      operationId: api_images_images_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Image.
        required: true
      tags:
      - api_images
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_order/course_signup/:
    post:
      operationId: api_order_course_signup_create
      tags:
      - api_order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseSignUp'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CourseSignUp'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CourseSignUp'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourseSignUp'
          description: ''
  /api_subscription/payment_link/:
    post:
      operationId: api_subscription_payment_link_create
      description: this api user, click button pay and create payment_subscription
      tags:
      - api_subscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaySubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaySubscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaySubscription'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaySubscription'
          description: ''
  /api_subscription/payment_subscriptions/:
    get:
      operationId: api_subscription_payment_subscriptions_list
      description: |-
        pagination --> 20 item
        user send request and get token for gateway
        access --> admin
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api_subscription
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentSubscriptionList'
          description: ''
  /api_subscription/payment_subscriptions/{id}/:
    get:
      operationId: api_subscription_payment_subscriptions_retrieve
      description: |-
        pagination --> 20 item
        user send request and get token for gateway
        access --> admin
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_subscription
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSubscription'
          description: ''
  /api_subscription/subscriptions/:
    get:
      operationId: api_subscription_subscriptions_list
      description: |-
        status --> active / expired / pending / canceled / trial

        pagination --> 20 item

        search --> ?status=status   | ?phone=mobile_phone

        description --> if user is amin return all query else return owner query
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api_subscription
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSubscriptionList'
          description: ''
    post:
      operationId: api_subscription_subscriptions_create
      description: |-
        status --> active / expired / pending / canceled / trial

        pagination --> 20 item

        search --> ?status=status   | ?phone=mobile_phone

        description --> if user is amin return all query else return owner query
      tags:
      - api_subscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateSubscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateSubscription'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSubscription'
          description: ''
  /api_subscription/subscriptions/{id}/:
    get:
      operationId: api_subscription_subscriptions_retrieve
      description: |-
        status --> active / expired / pending / canceled / trial

        pagination --> 20 item

        search --> ?status=status   | ?phone=mobile_phone

        description --> if user is amin return all query else return owner query
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_subscription
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
    put:
      operationId: api_subscription_subscriptions_update
      description: |-
        status --> active / expired / pending / canceled / trial

        pagination --> 20 item

        search --> ?status=status   | ?phone=mobile_phone

        description --> if user is amin return all query else return owner query
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_subscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Subscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
    patch:
      operationId: api_subscription_subscriptions_partial_update
      description: |-
        status --> active / expired / pending / canceled / trial

        pagination --> 20 item

        search --> ?status=status   | ?phone=mobile_phone

        description --> if user is amin return all query else return owner query
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_subscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubscription'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubscription'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubscription'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
          description: ''
    delete:
      operationId: api_subscription_subscriptions_destroy
      description: |-
        status --> active / expired / pending / canceled / trial

        pagination --> 20 item

        search --> ?status=status   | ?phone=mobile_phone

        description --> if user is amin return all query else return owner query
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_subscription
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api_subscription/user_verify_payment/:
    get:
      operationId: api_subscription_user_verify_payment_list
      tags:
      - api_subscription
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentVerify'
          description: ''
  /api_subscription/user_verify_payment/{id}/:
    get:
      operationId: api_subscription_user_verify_payment_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - api_subscription
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentVerify'
          description: ''
  /api_subscription/verify_payment/:
    post:
      operationId: api_subscription_verify_payment_create
      description: |-
        verify payment

        you must send data as query params --> ?status=status&trackId=trackId
      tags:
      - api_subscription
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    AdminBestStudent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_publish:
          type: boolean
        student:
          type: string
          description: نام دانش اموز
          maxLength: 50
        description:
          type: string
          nullable: true
          maxLength: 500
        student_image:
          type: string
          format: uri
          nullable: true
          description: حجم عکس اپلودی نباید بیش تر از یک مگابایت باشد
        attributes:
          type: array
          items:
            type: string
            maxLength: 100
          nullable: true
      required:
      - id
      - student
    AdminCertificate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: integer
        certificate_image_url:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        image:
          type: integer
          nullable: true
      required:
      - certificate_image_url
      - created_at
      - id
      - student
      - updated_at
    AdminCoachRanking:
      type: object
      properties:
        rate:
          $ref: '#/components/schemas/RateEnum'
        question_title:
          type: string
          readOnly: true
        student_name:
          type: string
          readOnly: true
        section_name:
          type: string
          readOnly: true
        section_question:
          type: integer
      required:
      - question_title
      - rate
      - section_name
      - section_question
      - student_name
    AdminComment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        parent:
          type: integer
        user_name:
          type: string
          readOnly: true
        path:
          type: string
          readOnly: true
        depth:
          type: integer
          readOnly: true
        numchild:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        comment_body:
          type: string
          title: متن کامنت
        is_publish:
          type: boolean
        is_pined:
          type: boolean
      required:
      - comment_body
      - created_at
      - depth
      - id
      - numchild
      - path
      - updated_at
      - user_name
    AdminCouchList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        get_coach_name:
          type: string
          readOnly: true
        get_coach_phone:
          type: string
          readOnly: true
        is_active:
          type: boolean
      required:
      - get_coach_name
      - get_coach_phone
      - id
    AdminCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        course_name:
          type: string
          maxLength: 100
        course_description:
          type: string
        course_image:
          type: string
          format: uri
          description: حداکثر اندازه عکس 1 مگابایت هست
        is_publish:
          type: boolean
        project_counter:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        is_free:
          type: boolean
        facilities:
          type: array
          items:
            type: string
            maxLength: 30
          nullable: true
        course_level:
          type: string
          nullable: true
          maxLength: 13
        time_course:
          type: string
          description: مدت زمان دوره
          maxLength: 10
        course_age:
          type: string
          description: بازه سنی دوره
          maxLength: 30
      required:
      - course_description
      - course_name
      - created_at
      - id
      - updated_at
    AdminCourseList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course_name:
          type: string
          maxLength: 100
      required:
      - course_name
      - id
    AdminCourseSectionFile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_publish:
          type: boolean
        zip_file:
          type: string
          format: uri
          pattern: (?:zip|rar)$
        title:
          type: string
          nullable: true
          description: عنوان
          maxLength: 100
        file_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/FileTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        answer:
          type: string
          format: uri
          nullable: true
          pattern: (?:zip|rar)$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - updated_at
    AdminCreateCourseSection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        cover_image:
          type: string
          format: uri
          nullable: true
        is_publish:
          type: boolean
        is_last_section:
          type: boolean
          description: اگر این مقدار برابر با ترو باشد یعنی اخرین سکشن برای درس خواهد
            بود
      required:
      - created_at
      - id
      - title
      - updated_at
    AdminLessonCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        coach:
          type: integer
        course:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        class_name:
          type: string
          description: نام کلاس
        is_active:
          type: boolean
          description: دیتا در سطح اپلیکیشن نمایش داده شود یا خیر
        progress:
          nullable: true
          description: |-
            وضعیت پیشرفت کلاس

            * `not_started` - Not Started
            * `finished` - Finished
            * `in_progress` - In Progress
          oneOf:
          - $ref: '#/components/schemas/ProgressEnum'
          - $ref: '#/components/schemas/NullEnum'
        students:
          type: array
          items:
            type: integer
          readOnly: true
      required:
      - class_name
      - coach
      - course
      - created_at
      - id
      - students
      - updated_at
    AdminSectionQuestion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        question_title:
          type: string
          nullable: true
          maxLength: 255
        is_publish:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
    AdminSectionVideo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          description: عنوان
          maxLength: 50
        video:
          type: string
          format: uri
          pattern: (?:mp4)$
        is_publish:
          type: boolean
      required:
      - created_at
      - id
      - updated_at
      - video
    AdminStudentList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student_name:
          type: string
          readOnly: true
        get_student_phone:
          type: string
          readOnly: true
        is_active:
          type: boolean
      required:
      - get_student_phone
      - id
      - student_name
    AdminStudentListCertificate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student_name:
          type: string
          readOnly: true
        get_student_phone:
          type: string
          readOnly: true
      required:
      - get_student_phone
      - id
      - student_name
    AdminStudentPresentAbsent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student_status:
          $ref: '#/components/schemas/StudentStatusFbbEnum'
        student_name:
          type: string
          readOnly: true
        section_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - section_name
      - student_name
    AdminUserList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        mobile_phone:
          type: string
          maxLength: 15
        get_full_name:
          type: string
          readOnly: true
        is_coach:
          type: boolean
          title: به عنوان مربی
        is_active:
          type: boolean
      required:
      - get_full_name
      - id
      - mobile_phone
    AllCourse:
      type: object
      properties:
        course_name:
          type: string
          maxLength: 100
        course_description:
          type: string
        course_image:
          type: string
          format: uri
          description: حداکثر اندازه عکس 1 مگابایت هست
        project_counter:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        facilities:
          type: array
          items:
            type: string
            maxLength: 30
          nullable: true
        course_level:
          type: string
          nullable: true
          maxLength: 13
        time_course:
          type: string
          description: مدت زمان دوره
          maxLength: 10
        course_age:
          type: string
          description: بازه سنی دوره
          maxLength: 30
      required:
      - course_description
      - course_name
    AnswerQuestion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        rate:
          $ref: '#/components/schemas/RateEnum'
      required:
      - created_at
      - id
      - rate
      - student
    AnswerSectionQuestion:
      type: object
      properties:
        rates:
          type: array
          items:
            $ref: '#/components/schemas/RateAnswer'
      required:
      - rates
    Banner:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        is_publish:
          type: boolean
        file:
          type: string
          format: uri
        banner_type:
          description: |-
            Banner type

            * `coach` - coach
            * `student` - student
            * `public` - public
          oneOf:
          - $ref: '#/components/schemas/BannerTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - file
      - id
      - title
    BannerTypeEnum:
      enum:
      - coach
      - student
      - public
      type: string
      description: |-
        * `coach` - coach
        * `student` - student
        * `public` - public
    BlankEnum:
      enum:
      - ''
    CallLessonCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        call:
          type: string
          description: تماس
          maxLength: 50
        status:
          allOf:
          - $ref: '#/components/schemas/CallLessonCourseStatusEnum'
          description: |-
            وضعیت تماس

            * `successful` - موفق
            * `un_successful` - ناموفق
            * `nothing` - چیزی ثبت نشده هست
        call_answering:
          type: string
          description: پاسخگوی تماس
          maxLength: 20
        project:
          type: string
          description: بابت پروژه
          maxLength: 30
        call_date:
          type: string
          format: date
          description: تاریخ مکالمه
        result_call:
          type: string
          description: نتیجه مکالمه
        cancellation_alert:
          type: boolean
          description: هشدار انصراف
      required:
      - call
      - call_answering
      - call_date
      - created_at
      - id
      - project
      - result_call
      - status
      - student
      - updated_at
    CallLessonCourseStatusEnum:
      enum:
      - successful
      - un_successful
      - nothing
      type: string
      description: |-
        * `successful` - موفق
        * `un_successful` - ناموفق
        * `nothing` - چیزی ثبت نشده هست
    CategoryBlog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        path:
          type: string
          maxLength: 255
        depth:
          type: integer
          maximum: 2147483647
          minimum: 0
        numchild:
          type: integer
          maximum: 2147483647
          minimum: 0
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        category_name:
          type: string
          maxLength: 255
        category_slug:
          type: string
          pattern: ^[-\w]+$
          maxLength: 255
        is_publish:
          type: boolean
      required:
      - category_name
      - category_slug
      - created_at
      - depth
      - id
      - path
      - updated_at
    Certificate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        student_full_name:
          type: string
          readOnly: true
        image:
          type: integer
          readOnly: true
          nullable: true
      required:
      - created_at
      - id
      - image
      - student_full_name
    ChangePassword:
      type: object
      properties:
        old_password:
          type: string
          writeOnly: true
          minLength: 8
        new_password:
          type: string
          writeOnly: true
          minLength: 8
        confirm_password:
          type: string
          writeOnly: true
          minLength: 8
      required:
      - confirm_password
      - new_password
      - old_password
    City:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        city:
          type: string
          title: شهر
          maxLength: 40
        state:
          allOf:
          - $ref: '#/components/schemas/State'
          readOnly: true
      required:
      - city
      - id
      - state
    CoachPresentAbsent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: integer
        student_status:
          $ref: '#/components/schemas/StudentStatusFbbEnum'
        section:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        student_name:
          type: string
          readOnly: true
        section_title:
          type: string
          readOnly: true
      required:
      - created_at
      - id
      - section
      - section_title
      - student
      - student_name
    CoachSection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        cover_image:
          type: string
          format: uri
          nullable: true
      required:
      - id
      - title
    CoachSectionFile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        zip_file:
          type: string
          format: uri
          pattern: (?:zip|rar)$
        answer:
          type: string
          format: uri
          nullable: true
          pattern: (?:zip|rar)$
        title:
          type: string
          nullable: true
          description: عنوان
          maxLength: 100
        file_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/FileTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        is_publish:
          type: boolean
      required:
      - id
    CoachSendFile:
      type: object
      properties:
        score:
          type: number
          format: double
          maximum: 100
          minimum: 0
          nullable: true
          description: نمره تکلیف ارسالی
        student:
          type: integer
        student_name:
          type: string
          readOnly: true
        comment_teacher:
          type: string
          nullable: true
          description: توضیح مربی در مورد فایل ارسال شده دانشجو
          maxLength: 255
        send_file_status:
          nullable: true
          description: |-
            وضعیت فایل ارسالی

            * `rejected` - رد شده
            * `accept_to_wait` - در انتظا تایید
            * `accepted` - تایید شده
          oneOf:
          - $ref: '#/components/schemas/SendFileStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
      required:
      - student
      - student_name
    CoachStudentSendFiles:
      type: object
      properties:
        student:
          type: integer
        id:
          type: integer
          readOnly: true
        std_name:
          type: string
          readOnly: true
        zip_file:
          type: string
          format: uri
          description: فایل ارسالی
        comment_student:
          type: string
          nullable: true
          description: توضیحی در مورد تمرین ارسالی
        file_type:
          type: string
          readOnly: true
        send_file_status:
          nullable: true
          description: |-
            وضعیت فایل ارسالی

            * `rejected` - رد شده
            * `accept_to_wait` - در انتظا تایید
            * `accepted` - تایید شده
          oneOf:
          - $ref: '#/components/schemas/SendFileStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        score:
          type: number
          format: double
          maximum: 100
          minimum: 0
          nullable: true
          description: نمره تکلیف ارسالی
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        comment_teacher:
          type: string
          nullable: true
          description: توضیح مربی در مورد فایل ارسال شده دانشجو
          maxLength: 255
      required:
      - created_at
      - file_type
      - id
      - std_name
      - student
      - updated_at
      - zip_file
    Comment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        comment_body:
          type: string
          title: متن کامنت
        parent:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        user_name:
          type: string
          readOnly: true
        user_image:
          type: string
          readOnly: true
        numchild:
          type: integer
          readOnly: true
        depth:
          type: integer
          readOnly: true
        path:
          type: string
          readOnly: true
        category:
          type: integer
        user_is_coach:
          type: boolean
          readOnly: true
      required:
      - category
      - comment_body
      - created_at
      - depth
      - id
      - numchild
      - path
      - user_image
      - user_is_coach
      - user_name
    CommentBlog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        replies:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        comment_body:
          type: string
        is_pined:
          type: boolean
        is_publish:
          type: boolean
        reply:
          type: integer
          nullable: true
      required:
      - comment_body
      - created_at
      - id
      - replies
      - updated_at
      - user
    ConfirmForgetPassword:
      type: object
      properties:
        code:
          type: string
        password:
          type: string
          writeOnly: true
          minLength: 8
        confirm_password:
          type: string
          writeOnly: true
          minLength: 8
      required:
      - code
      - confirm_password
      - password
    ConsultationRequestAnswer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        mobile_phone:
          type: string
          title: شماره موبایل
          pattern: ^09\d{9}
          maxLength: 11
        first_name:
          type: string
          title: نام کد اموز
          maxLength: 30
        last_name:
          type: string
          title: نام خانوادگی کد اموز
          maxLength: 30
        is_answer:
          type: boolean
        topic:
          type: string
          nullable: true
          maxLength: 100
        slot:
          type: integer
      required:
      - created_at
      - first_name
      - id
      - last_name
      - mobile_phone
      - slot
      - updated_at
    ConsultationSchedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
      required:
      - created_at
      - end_date
      - id
      - start_date
      - updated_at
    ConsultationSlot:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        schedule:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        date:
          type: string
          format: date
        is_available:
          type: boolean
      required:
      - created_at
      - date
      - id
      - schedule
      - updated_at
    ConsultationTopic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
      required:
      - id
      - name
    Coupon:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        code:
          type: string
          maxLength: 50
        valid_from:
          type: string
          format: date-time
          title: از تاریخ
        valid_to:
          type: string
          format: date-time
          title: تا تاریخ
        discount:
          type: integer
          maximum: 100
          minimum: 0
          description: درصد کد تخفیف
        is_active:
          type: boolean
        for_first:
          type: boolean
      required:
      - code
      - created_at
      - discount
      - id
      - updated_at
      - valid_from
      - valid_to
    CourseSection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        cover_image:
          type: string
          format: uri
          nullable: true
      required:
      - id
      - title
    CourseSectionDetail:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        cover_image:
          type: string
          format: uri
          nullable: true
        description:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - title
    CourseSectionFile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        zip_file:
          type: string
          format: uri
          pattern: (?:zip|rar)$
        title:
          type: string
          nullable: true
          description: عنوان
          maxLength: 100
        file_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/FileTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
      required:
      - id
    CourseSectionVideo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        video:
          type: string
          format: uri
          pattern: (?:mp4)$
        title:
          type: string
          nullable: true
          description: عنوان
          maxLength: 50
        section_cover_image:
          type: string
          readOnly: true
      required:
      - id
      - section_cover_image
      - video
    CourseSignUp:
      type: object
      properties:
        course:
          type: integer
        mobile_phone:
          type: string
          maxLength: 15
        first_name:
          type: string
          maxLength: 100
        last_name:
          type: string
          maxLength: 100
        have_account:
          type: boolean
          readOnly: true
      required:
      - course
      - first_name
      - have_account
      - last_name
      - mobile_phone
    CourseType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course_type:
          $ref: '#/components/schemas/CourseTypeEnum'
        description:
          type: string
          maxLength: 300
        price:
          type: number
          format: double
        discounts:
          type: string
          readOnly: true
        plan_type:
          oneOf:
          - $ref: '#/components/schemas/PlanTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        amount:
          type: integer
          maximum: 32767
          minimum: 0
      required:
      - discounts
      - id
      - price
    CourseTypeEnum:
      enum:
      - private
      - economy
      type: string
      description: |-
        * `private` - خصوصی
        * `economy` - اکونومی
    CreateCategory:
      type: object
      properties:
        category_name:
          type: string
          maxLength: 100
        parent:
          type: integer
        image:
          type: string
          format: uri
          nullable: true
        description:
          type: string
          nullable: true
          maxLength: 255
      required:
      - category_name
    CreateCoachPresentAbsent:
      type: object
      properties:
        present_absent:
          type: array
          items:
            $ref: '#/components/schemas/NestedCoachPresentAbsent'
      required:
      - present_absent
    CreateStudentEnrollment:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DataStudentEnrollment'
      required:
      - data
    CreateSubscription:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course:
          type: integer
        user:
          type: integer
          readOnly: true
          nullable: true
        crud_course_type:
          type: integer
      required:
      - course
      - crud_course_type
      - id
      - user
    CreateUserNotification:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        body:
          type: string
        user:
          type: integer
        notification_type:
          type: string
          nullable: true
          maxLength: 30
        char_link:
          type: string
          nullable: true
          description: link for redirect
          maxLength: 100
      required:
      - body
      - user
    CrudCourseType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course:
          type: integer
        discounts:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        price:
          type: number
          format: double
        description:
          type: string
          maxLength: 300
        is_active:
          type: boolean
        course_type:
          $ref: '#/components/schemas/CourseTypeEnum'
        amount:
          type: integer
          maximum: 32767
          minimum: 0
        plan_type:
          oneOf:
          - $ref: '#/components/schemas/PlanTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
      required:
      - course
      - created_at
      - discounts
      - id
      - price
      - updated_at
    DataStudentEnrollment:
      type: object
      properties:
        student:
          type: integer
      required:
      - student
    Discount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content_type:
          type: string
          title: Python model class name
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        object_id:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        percent:
          type: integer
          maximum: 100
          minimum: 0
          title: درصد تخفیف
        start_date:
          type: string
          format: date-time
          title: تاریخ شروع تخفیف
        end_date:
          type: string
          format: date-time
          title: تاریخ پایان تخفیف
        is_active:
          type: boolean
          title: فعال
      required:
      - content_type
      - created_at
      - end_date
      - id
      - percent
      - start_date
      - updated_at
    FavouritePost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        post:
          allOf:
          - $ref: '#/components/schemas/PostBlog'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - post
      - updated_at
      - user
    FileTypeEnum:
      enum:
      - main
      - more
      type: string
      description: |-
        * `main` - تمرین اصلی
        * `more` - تمرین اضافی
    FirstOneCoupon:
      type: object
      properties:
        code:
          type: string
          maxLength: 50
        valid_to:
          type: string
          format: date-time
          title: تا تاریخ
        valid_from:
          type: string
          format: date-time
          title: از تاریخ
      required:
      - code
      - valid_from
      - valid_to
    ForgetPassword:
      type: object
      properties:
        mobile_phone:
          type: string
          pattern: ^09\d{9}
      required:
      - mobile_phone
    GenderEnum:
      enum:
      - male
      - Female
      type: string
      description: |-
        * `male` - پسر
        * `Female` - دختر
    GradeEnum:
      enum:
      - one
      - two
      - three
      - four
      - five
      - six
      - seven
      - eight
      - nine
      - ten
      - eleven
      - twelfth
      - graduate
      type: string
      description: |-
        * `one` - اول
        * `two` - دوم
        * `three` - سوم
        * `four` - چهارم
        * `five` - پنجم
        * `six` - ششم
        * `seven` - هفتم
        * `eight` - هشتم
        * `nine` - نهم
        * `ten` - دهم
        * `eleven` - یازدهم
        * `twelfth` - دوازدهم
        * `graduate` - فارغ التحصیل
    HeaderSite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        header_title:
          type: string
          nullable: true
          description: عنوان هدر
          maxLength: 50
        image:
          type: string
          format: uri
          nullable: true
        background_color:
          type: string
          maxLength: 15
        text_color:
          type: string
          maxLength: 15
      required:
      - id
    HomeCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category_name:
          type: string
          maxLength: 100
        image:
          type: string
          format: uri
          nullable: true
        description:
          type: string
          nullable: true
          maxLength: 255
      required:
      - category_name
      - id
    HomeCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course_name:
          type: string
          maxLength: 100
        course_image:
          type: string
          format: uri
          description: حداکثر اندازه عکس 1 مگابایت هست
        course_description:
          type: string
        project_counter:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        facilities:
          type: array
          items:
            type: string
            maxLength: 30
          nullable: true
        course_level:
          type: string
          nullable: true
          maxLength: 13
        time_course:
          type: string
          description: مدت زمان دوره
          maxLength: 10
        course_age:
          type: string
          description: بازه سنی دوره
          maxLength: 30
        course_type_model:
          type: array
          items:
            $ref: '#/components/schemas/CourseType'
      required:
      - course_description
      - course_name
      - course_type_model
      - id
    Image:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
          description: max size is 1 MG
        image_url:
          type: string
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 128
        file_size:
          type: integer
          readOnly: true
          nullable: true
          description: file size as xx.b
      required:
      - file_size
      - id
      - image
      - image_url
    LessonCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course:
          $ref: '#/components/schemas/SimpleLessonCourse'
        course_category:
          type: string
          readOnly: true
        progress:
          nullable: true
          description: |-
            وضعیت پیشرفت کلاس

            * `not_started` - Not Started
            * `finished` - Finished
            * `in_progress` - In Progress
          oneOf:
          - $ref: '#/components/schemas/ProgressEnum'
          - $ref: '#/components/schemas/NullEnum'
        coach_name:
          type: string
          readOnly: true
        class_name:
          type: string
          description: نام کلاس
        progress_bar:
          type: string
          readOnly: true
      required:
      - class_name
      - coach_name
      - course
      - course_category
      - id
      - progress_bar
    ListBestStudent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student_image:
          type: string
          format: uri
          nullable: true
          description: حجم عکس اپلودی نباید بیش تر از یک مگابایت باشد
        description:
          type: string
          nullable: true
          maxLength: 500
        attributes:
          type: array
          items:
            type: string
            maxLength: 100
          nullable: true
        student:
          type: string
          description: نام دانش اموز
          maxLength: 50
      required:
      - id
      - student
    ListCoachLessonCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course:
          type: integer
        course_category:
          type: string
          readOnly: true
        progress:
          nullable: true
          description: |-
            وضعیت پیشرفت کلاس

            * `not_started` - Not Started
            * `finished` - Finished
            * `in_progress` - In Progress
          oneOf:
          - $ref: '#/components/schemas/ProgressEnum'
          - $ref: '#/components/schemas/NullEnum'
        class_name:
          type: string
          description: نام کلاس
        course_image:
          type: string
          readOnly: true
      required:
      - class_name
      - course
      - course_category
      - course_image
      - id
    ListRetrieveCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category_name:
          type: string
          maxLength: 100
        image:
          type: string
          format: uri
          nullable: true
        description:
          type: string
          nullable: true
          maxLength: 255
      required:
      - category_name
      - id
    NestedCoachPresentAbsent:
      type: object
      properties:
        student:
          type: integer
        section:
          type: integer
        student_status:
          allOf:
          - $ref: '#/components/schemas/StudentStatusFbbEnum'
          default: present
      required:
      - section
      - student
    NullEnum:
      enum:
      - null
    OnlineLink:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        link:
          type: string
          format: uri
          maxLength: 200
        is_publish:
          type: boolean
      required:
      - created_at
      - id
      - link
    PaginatedAdminBestStudentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminBestStudent'
    PaginatedAdminCommentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminComment'
    PaginatedAdminCourseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminCourse'
    PaginatedAdminCreateCourseSectionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminCreateCourseSection'
    PaginatedAdminLessonCourseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminLessonCourse'
    PaginatedAdminStudentPresentAbsentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminStudentPresentAbsent'
    PaginatedAllCourseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AllCourse'
    PaginatedCallLessonCourseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/CallLessonCourse'
    PaginatedCommentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
    PaginatedConsultationRequestAnswerList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ConsultationRequestAnswer'
    PaginatedCouponList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Coupon'
    PaginatedLessonCourseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LessonCourse'
    PaginatedListBestStudentList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ListBestStudent'
    PaginatedListCoachLessonCourseList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ListCoachLessonCourse'
    PaginatedListRetrieveCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ListRetrieveCategory'
    PaginatedOnlineLinkList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OnlineLink'
    PaginatedPaymentSubscriptionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PaymentSubscription'
    PaginatedStudentAccessSectionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentAccessSection'
    PaginatedSubscriptionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
    PaginatedTickerRoomList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TickerRoom'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedUserNotificationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserNotification'
    PatchUserNotification:
      type: object
      properties:
        is_read:
          type: boolean
    PatchedAdminBestStudent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_publish:
          type: boolean
        student:
          type: string
          description: نام دانش اموز
          maxLength: 50
        description:
          type: string
          nullable: true
          maxLength: 500
        student_image:
          type: string
          format: uri
          nullable: true
          description: حجم عکس اپلودی نباید بیش تر از یک مگابایت باشد
        attributes:
          type: array
          items:
            type: string
            maxLength: 100
          nullable: true
    PatchedAdminCertificate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: integer
        certificate_image_url:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        image:
          type: integer
          nullable: true
    PatchedAdminComment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        parent:
          type: integer
        user_name:
          type: string
          readOnly: true
        path:
          type: string
          readOnly: true
        depth:
          type: integer
          readOnly: true
        numchild:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        comment_body:
          type: string
          title: متن کامنت
        is_publish:
          type: boolean
        is_pined:
          type: boolean
    PatchedAdminCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        course_name:
          type: string
          maxLength: 100
        course_description:
          type: string
        course_image:
          type: string
          format: uri
          description: حداکثر اندازه عکس 1 مگابایت هست
        is_publish:
          type: boolean
        project_counter:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
        is_free:
          type: boolean
        facilities:
          type: array
          items:
            type: string
            maxLength: 30
          nullable: true
        course_level:
          type: string
          nullable: true
          maxLength: 13
        time_course:
          type: string
          description: مدت زمان دوره
          maxLength: 10
        course_age:
          type: string
          description: بازه سنی دوره
          maxLength: 30
    PatchedAdminCourseSectionFile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_publish:
          type: boolean
        zip_file:
          type: string
          format: uri
          pattern: (?:zip|rar)$
        title:
          type: string
          nullable: true
          description: عنوان
          maxLength: 100
        file_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/FileTypeEnum'
          - $ref: '#/components/schemas/NullEnum'
        answer:
          type: string
          format: uri
          nullable: true
          pattern: (?:zip|rar)$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedAdminCreateCourseSection:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        cover_image:
          type: string
          format: uri
          nullable: true
        is_publish:
          type: boolean
        is_last_section:
          type: boolean
          description: اگر این مقدار برابر با ترو باشد یعنی اخرین سکشن برای درس خواهد
            بود
    PatchedAdminLessonCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        coach:
          type: integer
        course:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        class_name:
          type: string
          description: نام کلاس
        is_active:
          type: boolean
          description: دیتا در سطح اپلیکیشن نمایش داده شود یا خیر
        progress:
          nullable: true
          description: |-
            وضعیت پیشرفت کلاس

            * `not_started` - Not Started
            * `finished` - Finished
            * `in_progress` - In Progress
          oneOf:
          - $ref: '#/components/schemas/ProgressEnum'
          - $ref: '#/components/schemas/NullEnum'
        students:
          type: array
          items:
            type: integer
          readOnly: true
    PatchedAdminSectionQuestion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        question_title:
          type: string
          nullable: true
          maxLength: 255
        is_publish:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedAdminSectionVideo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          description: عنوان
          maxLength: 50
        video:
          type: string
          format: uri
          pattern: (?:mp4)$
        is_publish:
          type: boolean
    PatchedBanner:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        is_publish:
          type: boolean
        file:
          type: string
          format: uri
        banner_type:
          description: |-
            Banner type

            * `coach` - coach
            * `student` - student
            * `public` - public
          oneOf:
          - $ref: '#/components/schemas/BannerTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedCallLessonCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        call:
          type: string
          description: تماس
          maxLength: 50
        status:
          allOf:
          - $ref: '#/components/schemas/CallLessonCourseStatusEnum'
          description: |-
            وضعیت تماس

            * `successful` - موفق
            * `un_successful` - ناموفق
            * `nothing` - چیزی ثبت نشده هست
        call_answering:
          type: string
          description: پاسخگوی تماس
          maxLength: 20
        project:
          type: string
          description: بابت پروژه
          maxLength: 30
        call_date:
          type: string
          format: date
          description: تاریخ مکالمه
        result_call:
          type: string
          description: نتیجه مکالمه
        cancellation_alert:
          type: boolean
          description: هشدار انصراف
    PatchedCategoryBlog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        path:
          type: string
          maxLength: 255
        depth:
          type: integer
          maximum: 2147483647
          minimum: 0
        numchild:
          type: integer
          maximum: 2147483647
          minimum: 0
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        category_name:
          type: string
          maxLength: 255
        category_slug:
          type: string
          pattern: ^[-\w]+$
          maxLength: 255
        is_publish:
          type: boolean
    PatchedCoachPresentAbsent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: integer
        student_status:
          $ref: '#/components/schemas/StudentStatusFbbEnum'
        section:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        student_name:
          type: string
          readOnly: true
        section_title:
          type: string
          readOnly: true
    PatchedComment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        comment_body:
          type: string
          title: متن کامنت
        parent:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        user_name:
          type: string
          readOnly: true
        user_image:
          type: string
          readOnly: true
        numchild:
          type: integer
          readOnly: true
        depth:
          type: integer
          readOnly: true
        path:
          type: string
          readOnly: true
        category:
          type: integer
        user_is_coach:
          type: boolean
          readOnly: true
    PatchedCommentBlog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        replies:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        comment_body:
          type: string
        is_pined:
          type: boolean
        is_publish:
          type: boolean
        reply:
          type: integer
          nullable: true
    PatchedConsultationRequestAnswer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        mobile_phone:
          type: string
          title: شماره موبایل
          pattern: ^09\d{9}
          maxLength: 11
        first_name:
          type: string
          title: نام کد اموز
          maxLength: 30
        last_name:
          type: string
          title: نام خانوادگی کد اموز
          maxLength: 30
        is_answer:
          type: boolean
        topic:
          type: string
          nullable: true
          maxLength: 100
        slot:
          type: integer
    PatchedConsultationSchedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
    PatchedConsultationSlot:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        schedule:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        date:
          type: string
          format: date
        is_available:
          type: boolean
    PatchedConsultationTopic:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
    PatchedCoupon:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        code:
          type: string
          maxLength: 50
        valid_from:
          type: string
          format: date-time
          title: از تاریخ
        valid_to:
          type: string
          format: date-time
          title: تا تاریخ
        discount:
          type: integer
          maximum: 100
          minimum: 0
          description: درصد کد تخفیف
        is_active:
          type: boolean
        for_first:
          type: boolean
    PatchedCrudCourseType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course:
          type: integer
        discounts:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        price:
          type: number
          format: double
        description:
          type: string
          maxLength: 300
        is_active:
          type: boolean
        course_type:
          $ref: '#/components/schemas/CourseTypeEnum'
        amount:
          type: integer
          maximum: 32767
          minimum: 0
        plan_type:
          oneOf:
          - $ref: '#/components/schemas/PlanTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
    PatchedDiscount:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content_type:
          type: string
          title: Python model class name
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        object_id:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
        percent:
          type: integer
          maximum: 100
          minimum: 0
          title: درصد تخفیف
        start_date:
          type: string
          format: date-time
          title: تاریخ شروع تخفیف
        end_date:
          type: string
          format: date-time
          title: تاریخ پایان تخفیف
        is_active:
          type: boolean
          title: فعال
    PatchedFavouritePost:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        post:
          allOf:
          - $ref: '#/components/schemas/PostBlog'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedHeaderSite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        header_title:
          type: string
          nullable: true
          description: عنوان هدر
          maxLength: 50
        image:
          type: string
          format: uri
          nullable: true
        background_color:
          type: string
          maxLength: 15
        text_color:
          type: string
          maxLength: 15
    PatchedImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
          description: max size is 1 MG
        image_url:
          type: string
          readOnly: true
        title:
          type: string
          nullable: true
          maxLength: 128
        file_size:
          type: integer
          readOnly: true
          nullable: true
          description: file size as xx.b
    PatchedListCoachLessonCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course:
          type: integer
        course_category:
          type: string
          readOnly: true
        progress:
          nullable: true
          description: |-
            وضعیت پیشرفت کلاس

            * `not_started` - Not Started
            * `finished` - Finished
            * `in_progress` - In Progress
          oneOf:
          - $ref: '#/components/schemas/ProgressEnum'
          - $ref: '#/components/schemas/NullEnum'
        class_name:
          type: string
          description: نام کلاس
        course_image:
          type: string
          readOnly: true
    PatchedOnlineLink:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        link:
          type: string
          format: uri
          maxLength: 200
        is_publish:
          type: boolean
    PatchedPatchUserNotification:
      type: object
      properties:
        is_read:
          type: boolean
    PatchedPostBlog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
        category_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        post_introduction:
          type: string
          description: مقدمه ای در مورد پست
          maxLength: 255
        post_title:
          type: string
          description: عنوان پست
          maxLength: 255
        post_slug:
          type: string
          pattern: ^[-\w]+$
          maxLength: 255
        post_body:
          type: string
        read_count:
          type: integer
          readOnly: true
          description: چند نفر این پست را دیده اند
        read_time:
          type: integer
          maximum: 32767
          minimum: 0
          description: مدت زمان برای مطالعه این مقاله
        post_cover_image:
          type: string
          format: uri
        likes:
          type: integer
          readOnly: true
        is_publish:
          type: boolean
    PatchedSendFile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        score:
          type: number
          format: double
          readOnly: true
          nullable: true
          description: نمره تکلیف ارسالی
        comment_student:
          type: string
          nullable: true
          description: توضیحی در مورد تمرین ارسالی
        zip_file:
          type: string
          format: uri
          description: فایل ارسالی
        created_at:
          type: string
          format: date-time
          readOnly: true
        comment_teacher:
          type: string
          readOnly: true
          nullable: true
          description: توضیح مربی در مورد فایل ارسال شده دانشجو
        send_file_status:
          readOnly: true
          nullable: true
          description: |-
            وضعیت فایل ارسالی

            * `rejected` - رد شده
            * `accept_to_wait` - در انتظا تایید
            * `accepted` - تایید شده
          oneOf:
          - $ref: '#/components/schemas/SendFileStatusEnum'
          - $ref: '#/components/schemas/NullEnum'
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedSignUpCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        student_name:
          type: string
          description: نام و نام خوادگی داشن اموز
          maxLength: 120
        phone_number:
          type: string
          description: 'شماره تلفن '
          maxLength: 15
    PatchedStudentEnrollment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student_status:
          oneOf:
          - $ref: '#/components/schemas/StudentStatus900Enum'
          - $ref: '#/components/schemas/BlankEnum'
        student:
          type: integer
    PatchedSubscription:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course_name:
          type: string
          readOnly: true
        course_category_name:
          type: integer
          readOnly: true
        user_full_name:
          type: string
          readOnly: true
        user_mobile_phone:
          type: string
          readOnly: true
        coupon_code:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        end_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/Status3aaEnum'
        auto_renew:
          type: boolean
        price:
          type: number
          format: double
          nullable: true
        coupon:
          type: integer
          nullable: true
        crud_course_type:
          type: integer
          nullable: true
    PatchedTagBlog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        tag_name:
          type: string
          maxLength: 255
        is_publish:
          type: boolean
    PatchedTickerRoom:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title_room:
          type: string
          description: عنوان چت روم تیکت
          maxLength: 50
        subject_room:
          type: string
          nullable: true
          description: موضوع تیکت
          maxLength: 50
        is_close:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedTicket:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ticket_body:
          type: string
          title: متن تیکت
        ticket_file:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        sender_name:
          type: string
          readOnly: true
        parent:
          type: integer
        depth:
          type: integer
          readOnly: true
        path:
          type: string
          readOnly: true
        numchild:
          type: integer
          readOnly: true
        reply:
          type: integer
          readOnly: true
          nullable: true
        reply_name:
          type: string
          readOnly: true
        sender:
          type: integer
          readOnly: true
    PatchedUpdateCategoryNode:
      type: object
      properties:
        category_name:
          type: string
          maxLength: 100
        image:
          type: string
          format: uri
          nullable: true
        description:
          type: string
          nullable: true
          maxLength: 255
    PatchedUpdateCoachStudentSendFiles:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        score:
          type: number
          format: double
          maximum: 100
          minimum: 0
          nullable: true
          description: نمره تکلیف ارسالی
        comment_teacher:
          type: string
          nullable: true
          description: توضیح مربی در مورد فایل ارسال شده دانشجو
          maxLength: 255
    PatchedUpdateUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        is_deleted:
          type: boolean
          readOnly: true
          nullable: true
        mobile_phone:
          type: string
          maxLength: 15
        first_name:
          type: string
          nullable: true
          maxLength: 30
        last_name:
          type: string
          nullable: true
          maxLength: 30
        email:
          type: string
          format: email
          nullable: true
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
        second_mobile_phone:
          type: string
          nullable: true
          title: شماره تماس دوم
          pattern: ^09\d{9}
          maxLength: 11
        nation_code:
          type: string
          nullable: true
          title: کد ملی
          pattern: \d{10}
          maxLength: 10
        address:
          type: string
          nullable: true
          title: ادرس
        is_coach:
          type: boolean
          title: به عنوان مربی
        birth_date:
          type: string
          format: date
          nullable: true
          title: تاریخ نولد
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        grade:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GradeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        school:
          type: string
          nullable: true
          title: نام مدرسه
          maxLength: 30
        state:
          type: integer
          nullable: true
          title: استان
        city:
          type: integer
          nullable: true
    PatchedUserConsultationRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        slot:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        mobile_phone:
          type: string
          title: شماره موبایل
          pattern: ^09\d{9}
          maxLength: 11
        first_name:
          type: string
          title: نام کد اموز
          maxLength: 30
        last_name:
          type: string
          title: نام خانوادگی کد اموز
          maxLength: 30
        topic:
          type: string
          nullable: true
          maxLength: 100
    PaySubscription:
      type: object
      properties:
        subscription:
          type: integer
        coupon_code:
          type: string
      required:
      - subscription
    PaymentSubscription:
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/SimpleSubscription'
        created_at:
          type: string
          format: date-time
          readOnly: true
        response_payment:
          nullable: true
      required:
      - created_at
      - subscription
    PaymentVerify:
      type: object
      properties:
        verify_payment: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
    PlanTypeEnum:
      enum:
      - month
      - year
      - day
      type: string
      description: |-
        * `month` - ماه
        * `year` - سال
        * `day` - روز
    PostBlog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
        category_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        post_introduction:
          type: string
          description: مقدمه ای در مورد پست
          maxLength: 255
        post_title:
          type: string
          description: عنوان پست
          maxLength: 255
        post_slug:
          type: string
          pattern: ^[-\w]+$
          maxLength: 255
        post_body:
          type: string
        read_count:
          type: integer
          readOnly: true
          description: چند نفر این پست را دیده اند
        read_time:
          type: integer
          maximum: 32767
          minimum: 0
          description: مدت زمان برای مطالعه این مقاله
        post_cover_image:
          type: string
          format: uri
        likes:
          type: integer
          readOnly: true
        is_publish:
          type: boolean
      required:
      - author
      - category_name
      - created_at
      - id
      - likes
      - post_body
      - post_cover_image
      - post_introduction
      - post_slug
      - post_title
      - read_count
      - read_time
      - tags
      - updated_at
    ProgressEnum:
      enum:
      - not_started
      - finished
      - in_progress
      type: string
      description: |-
        * `not_started` - Not Started
        * `finished` - Finished
        * `in_progress` - In Progress
    RateAnswer:
      type: object
      properties:
        rate:
          $ref: '#/components/schemas/RateEnum'
        section_question_id:
          type: integer
      required:
      - rate
      - section_question_id
    RateEnum:
      enum:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      - '8'
      - '9'
      - '10'
      type: string
      description: |-
        * `1` - 1
        * `2` - 2
        * `3` - 3
        * `4` - 4
        * `5` - 5
        * `6` - 6
        * `7` - 7
        * `8` - 8
        * `9` - 9
        * `10` - 10
    RequestPhone:
      type: object
      properties:
        mobile_phone:
          type: string
      required:
      - mobile_phone
    RequestPhoneVerify:
      type: object
      properties:
        mobile_phone:
          type: string
        code:
          type: string
      required:
      - code
      - mobile_phone
    SectionQuestion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        question_title:
          type: string
          nullable: true
          maxLength: 255
      required:
      - id
    SectionScore:
      type: object
      properties:
        score:
          type: number
          format: double
          maximum: 100
          minimum: 0
      required:
      - score
    SendFile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        score:
          type: number
          format: double
          readOnly: true
          nullable: true
          description: نمره تکلیف ارسالی
        comment_student:
          type: string
          nullable: true
          description: توضیحی در مورد تمرین ارسالی
        zip_file:
          type: string
          format: uri
          description: فایل ارسالی
        created_at:
          type: string
          format: date-time
          readOnly: true
        comment_teacher:
          type: string
          readOnly: true
          nullable: true
          description: توضیح مربی در مورد فایل ارسال شده دانشجو
        send_file_status:
          readOnly: true
          nullable: true
          description: |-
            وضعیت فایل ارسالی

            * `rejected` - رد شده
            * `accept_to_wait` - در انتظا تایید
            * `accepted` - تایید شده
          oneOf:
          - $ref: '#/components/schemas/SendFileStatusEnum'
          - $ref: '#/components/schemas/NullEnum'
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - comment_teacher
      - created_at
      - id
      - score
      - send_file_status
      - updated_at
      - zip_file
    SendFileStatusEnum:
      enum:
      - rejected
      - accept_to_wait
      - accepted
      type: string
      description: |-
        * `rejected` - رد شده
        * `accept_to_wait` - در انتظا تایید
        * `accepted` - تایید شده
    SendNotificationUserSendSectionFile:
      type: object
      properties:
        lesson_course:
          type: integer
        section:
          type: integer
      required:
      - lesson_course
      - section
    SignUpCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        student_name:
          type: string
          description: نام و نام خوادگی داشن اموز
          maxLength: 120
        phone_number:
          type: string
          description: 'شماره تلفن '
          maxLength: 15
      required:
      - course
      - created_at
      - id
      - phone_number
      - student_name
    SimpleLessonCourse:
      type: object
      properties:
        course_name:
          type: string
          maxLength: 100
        course_image:
          type: string
          format: uri
          description: حداکثر اندازه عکس 1 مگابایت هست
        project_counter:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
      required:
      - course_name
    SimpleSubscription:
      type: object
      properties:
        course:
          type: integer
          nullable: true
        price:
          type: number
          format: double
          nullable: true
        end_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/Status3aaEnum'
      required:
      - end_date
    State:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        state_name:
          type: string
          title: استان
          maxLength: 30
      required:
      - id
      - state_name
    Status3aaEnum:
      enum:
      - active
      - expired
      - pending
      - canceled
      - trial
      type: string
      description: |-
        * `active` - فعال
        * `expired` - منقضی شده
        * `pending` - در انتظار
        * `canceled` - لغو شده
        * `trial` - آزمایشی
    StudentAccessSection:
      type: object
      properties:
        section:
          $ref: '#/components/schemas/CourseSection'
        is_access:
          type: boolean
      required:
      - section
    StudentAccessSectionDetail:
      type: object
      properties:
        section:
          $ref: '#/components/schemas/CourseSectionDetail'
        is_access:
          type: boolean
      required:
      - section
    StudentEnrollment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student_status:
          oneOf:
          - $ref: '#/components/schemas/StudentStatus900Enum'
          - $ref: '#/components/schemas/BlankEnum'
        student:
          type: integer
      required:
      - id
      - student
    StudentLessonCourse:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student_status:
          oneOf:
          - $ref: '#/components/schemas/StudentStatus900Enum'
          - $ref: '#/components/schemas/BlankEnum'
        student_name:
          type: string
          readOnly: true
        student_phone:
          type: string
          readOnly: true
        student_second_number:
          type: string
          readOnly: true
      required:
      - id
      - student_name
      - student_phone
      - student_second_number
    StudentListPresentAbsent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student_status:
          $ref: '#/components/schemas/StudentStatusFbbEnum'
        section_name:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - section_name
    StudentOnlineLink:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        link:
          type: string
          format: uri
          maxLength: 200
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - link
    StudentPresentAbsent:
      type: object
      properties:
        student_status:
          $ref: '#/components/schemas/StudentStatusFbbEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
    StudentStatus900Enum:
      enum:
      - active
      - cancel
      - not_paid
      type: string
      description: |-
        * `active` - فعال
        * `cancel` - انصراف
        * `not_paid` - پرداخت نکرده
    StudentStatusFbbEnum:
      enum:
      - present
      - activity
      - absent
      - late_attendance
      - inactivity
      - nothing
      type: string
      description: |-
        * `present` - حاضر
        * `activity` - حضور فعال
        * `absent` - غایب
        * `late_attendance` - حضور با تاخیر
        * `inactivity` - عدم فعالیت
        * `nothing` - خالی
    Subscription:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        course_name:
          type: string
          readOnly: true
        course_category_name:
          type: integer
          readOnly: true
        user_full_name:
          type: string
          readOnly: true
        user_mobile_phone:
          type: string
          readOnly: true
        coupon_code:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        end_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/Status3aaEnum'
        auto_renew:
          type: boolean
        price:
          type: number
          format: double
          nullable: true
        coupon:
          type: integer
          nullable: true
        crud_course_type:
          type: integer
          nullable: true
      required:
      - coupon_code
      - course_category_name
      - course_name
      - created_at
      - end_date
      - id
      - updated_at
      - user_full_name
      - user_mobile_phone
    SyncAdminCreateStudentSection:
      type: object
      properties:
        section:
          type: integer
        course:
          type: integer
      required:
      - course
      - section
    TagBlog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        tag_name:
          type: string
          maxLength: 255
        is_publish:
          type: boolean
      required:
      - created_at
      - id
      - tag_name
      - updated_at
    TickerRoom:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title_room:
          type: string
          description: عنوان چت روم تیکت
          maxLength: 50
        subject_room:
          type: string
          nullable: true
          description: موضوع تیکت
          maxLength: 50
        is_close:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - title_room
    Ticket:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ticket_body:
          type: string
          title: متن تیکت
        ticket_file:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        sender_name:
          type: string
          readOnly: true
        parent:
          type: integer
        depth:
          type: integer
          readOnly: true
        path:
          type: string
          readOnly: true
        numchild:
          type: integer
          readOnly: true
        reply:
          type: integer
          readOnly: true
          nullable: true
        reply_name:
          type: string
          readOnly: true
        sender:
          type: integer
          readOnly: true
      required:
      - created_at
      - depth
      - id
      - numchild
      - path
      - reply
      - reply_name
      - sender
      - sender_name
      - ticket_body
    UpdateCategoryNode:
      type: object
      properties:
        category_name:
          type: string
          maxLength: 100
        image:
          type: string
          format: uri
          nullable: true
        description:
          type: string
          nullable: true
          maxLength: 255
      required:
      - category_name
    UpdateCoachStudentSendFiles:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        score:
          type: number
          format: double
          maximum: 100
          minimum: 0
          nullable: true
          description: نمره تکلیف ارسالی
        comment_teacher:
          type: string
          nullable: true
          description: توضیح مربی در مورد فایل ارسال شده دانشجو
          maxLength: 255
      required:
      - id
    UpdateUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        is_deleted:
          type: boolean
          readOnly: true
          nullable: true
        mobile_phone:
          type: string
          maxLength: 15
        first_name:
          type: string
          nullable: true
          maxLength: 30
        last_name:
          type: string
          nullable: true
          maxLength: 30
        email:
          type: string
          format: email
          nullable: true
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
        second_mobile_phone:
          type: string
          nullable: true
          title: شماره تماس دوم
          pattern: ^09\d{9}
          maxLength: 11
        nation_code:
          type: string
          nullable: true
          title: کد ملی
          pattern: \d{10}
          maxLength: 10
        address:
          type: string
          nullable: true
          title: ادرس
        is_coach:
          type: boolean
          title: به عنوان مربی
        birth_date:
          type: string
          format: date
          nullable: true
          title: تاریخ نولد
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        grade:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GradeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        school:
          type: string
          nullable: true
          title: نام مدرسه
          maxLength: 30
        state:
          type: integer
          nullable: true
          title: استان
        city:
          type: integer
          nullable: true
      required:
      - created_at
      - deleted_at
      - id
      - is_deleted
      - mobile_phone
      - updated_at
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        confirm_password:
          type: string
          writeOnly: true
        image:
          type: string
          format: uri
        city_name:
          type: string
          readOnly: true
        state_name:
          type: string
          readOnly: true
        student_referral_code:
          type: string
          readOnly: true
        referral_code:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        deleted_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        is_deleted:
          type: boolean
          readOnly: true
          nullable: true
        mobile_phone:
          type: string
          maxLength: 15
        first_name:
          type: string
          nullable: true
          maxLength: 30
        last_name:
          type: string
          nullable: true
          maxLength: 30
        email:
          type: string
          format: email
          nullable: true
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
        password:
          type: string
          writeOnly: true
          nullable: true
          maxLength: 128
        second_mobile_phone:
          type: string
          nullable: true
          title: شماره تماس دوم
          pattern: ^09\d{9}
          maxLength: 11
        nation_code:
          type: string
          nullable: true
          title: کد ملی
          pattern: \d{10}
          maxLength: 10
        address:
          type: string
          nullable: true
          title: ادرس
        is_coach:
          type: boolean
          title: به عنوان مربی
        birth_date:
          type: string
          format: date
          nullable: true
          title: تاریخ نولد
        gender:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GenderEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        grade:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/GradeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        school:
          type: string
          nullable: true
          title: نام مدرسه
          maxLength: 30
        state:
          type: integer
          nullable: true
          title: استان
        city:
          type: integer
          nullable: true
      required:
      - city_name
      - confirm_password
      - created_at
      - deleted_at
      - id
      - is_deleted
      - mobile_phone
      - state_name
      - student_referral_code
      - updated_at
    UserConsultationRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        slot:
          type: integer
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        mobile_phone:
          type: string
          title: شماره موبایل
          pattern: ^09\d{9}
          maxLength: 11
        first_name:
          type: string
          title: نام کد اموز
          maxLength: 30
        last_name:
          type: string
          title: نام خانوادگی کد اموز
          maxLength: 30
        topic:
          type: string
          nullable: true
          maxLength: 100
      required:
      - created_at
      - first_name
      - id
      - last_name
      - mobile_phone
      - slot
      - updated_at
    UserLogin:
      type: object
      properties:
        mobile_phone:
          type: string
        password:
          type: string
          writeOnly: true
          description: رمز عبور
      required:
      - mobile_phone
      - password
    UserNotification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_fullname:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 255
        body:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        is_read:
          type: boolean
        char_link:
          type: string
          nullable: true
          description: link for redirect
          maxLength: 100
        notification_type:
          type: string
          nullable: true
          maxLength: 30
      required:
      - body
      - created_at
      - id
      - user_fullname
    ValidateCouponCode:
      type: object
      properties:
        code:
          type: string
          maxLength: 50
        discount:
          type: integer
          readOnly: true
          description: درصد کد تخفیف
      required:
      - code
      - discount
    ValidateToken:
      type: object
      properties:
        token:
          type: string
      required:
      - token
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
