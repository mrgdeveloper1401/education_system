# Generated by Django 5.1.2 on 2024-11-04 22:17

import accounts.managers
import accounts.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Otp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "mobile_phone",
                    models.CharField(
                        max_length=11,
                        validators=[accounts.validators.MobileRegexValidator()],
                        verbose_name="mobile phone",
                    ),
                ),
                (
                    "code",
                    models.CharField(blank=True, max_length=6, verbose_name="code"),
                ),
                (
                    "expired_date",
                    models.DateTimeField(blank=True, verbose_name="expired date"),
                ),
            ],
            options={
                "verbose_name": "کد",
                "verbose_name_plural": "کد ها",
                "db_table": "otp_code",
            },
        ),
        migrations.CreateModel(
            name="School",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("is_deleted", models.BooleanField(default=False, editable=False)),
                (
                    "school_name",
                    models.CharField(max_length=30, verbose_name="نام مدرسه"),
                ),
            ],
            options={
                "verbose_name": "مدرسه",
                "verbose_name_plural": "مدرسه ها",
                "db_table": "school",
            },
        ),
        migrations.CreateModel(
            name="State",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("is_deleted", models.BooleanField(default=False, editable=False)),
                (
                    "state_name",
                    models.CharField(max_length=30, unique=True, verbose_name="استان"),
                ),
            ],
            options={
                "verbose_name": "استان",
                "verbose_name_plural": "استان ها",
                "db_table": "state",
            },
        ),
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("is_deleted", models.BooleanField(default=False, editable=False)),
                ("city", models.CharField(max_length=30, verbose_name="شهر")),
                (
                    "state_name",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="city",
                        to="accounts.state",
                        verbose_name="استان",
                    ),
                ),
            ],
            options={
                "verbose_name": "شهر",
                "verbose_name_plural": "شهر ها",
                "db_table": "city",
                "unique_together": {("state_name", "city")},
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "deleted_at",
                    models.DateTimeField(blank=True, editable=False, null=True),
                ),
                ("is_deleted", models.BooleanField(default=False, editable=False)),
                (
                    "mobile_phone",
                    models.CharField(
                        max_length=11,
                        unique=True,
                        validators=[accounts.validators.MobileRegexValidator()],
                        verbose_name="mobile phone",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=30, null=True, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=30, null=True, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="email address",
                    ),
                ),
                ("is_staff", models.BooleanField(default=False)),
                ("is_verified", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "password",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="password"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="user_image/%Y/%m/%d",
                        verbose_name="عکس کاربر",
                    ),
                ),
                (
                    "second_mobile_phone",
                    models.CharField(
                        blank=True,
                        max_length=11,
                        null=True,
                        validators=[accounts.validators.MobileRegexValidator()],
                        verbose_name="شماره تماس دوم",
                    ),
                ),
                (
                    "nation_code",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        null=True,
                        validators=[accounts.validators.NationCodeRegexValidator()],
                        verbose_name="کد ملی",
                    ),
                ),
                (
                    "address",
                    models.TextField(blank=True, null=True, verbose_name="ادرس"),
                ),
                (
                    "is_coach",
                    models.BooleanField(default=False, verbose_name="به عنوان مربی"),
                ),
                (
                    "is_student",
                    models.BooleanField(default=False, verbose_name="به عنوان فراگیر"),
                ),
                (
                    "birth_date",
                    models.DateField(blank=True, null=True, verbose_name="تاریخ نولد"),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("male", "پسر"), ("Female", "دختر")],
                        max_length=6,
                        null=True,
                        verbose_name="gender",
                    ),
                ),
                (
                    "grade",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("one", "اول"),
                            ("two", "دوم"),
                            ("three", "سوم"),
                            ("four", "چهارم"),
                            ("five", "پنجم"),
                            ("six", "ششم"),
                            ("seven", "هفتم"),
                            ("eight", "هشتم"),
                            ("nine", "نهم"),
                            ("ten", "دهم"),
                            ("eleven", "یازدهم"),
                            ("twelfth", "دوازدهم"),
                            ("graduate", "فارغ التحصیل"),
                        ],
                        max_length=8,
                        null=True,
                        verbose_name="grade",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="student_city",
                        to="accounts.city",
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="student_school",
                        to="accounts.school",
                        verbose_name="مدرسه",
                    ),
                ),
                (
                    "state",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="state",
                        to="accounts.state",
                        verbose_name="استان",
                    ),
                ),
            ],
            options={
                "verbose_name": "کاربر",
                "verbose_name_plural": "کاربران",
                "db_table": "users",
                "constraints": [
                    models.UniqueConstraint(
                        condition=models.Q(("email__isnull", True)),
                        fields=("email",),
                        name="unique_emai_if_not_null",
                    ),
                    models.UniqueConstraint(
                        condition=models.Q(("nation_code__isnull", True)),
                        fields=("nation_code",),
                        name="unique_nation_code_if_not_null",
                    ),
                    models.UniqueConstraint(
                        condition=models.Q(("second_mobile_phone__isnull", True)),
                        fields=("second_mobile_phone",),
                        name="unique_second_mobile_phone_if_not_null",
                    ),
                ],
            },
            managers=[
                ("objects", accounts.managers.UserManager()),
            ],
        ),
    ]
