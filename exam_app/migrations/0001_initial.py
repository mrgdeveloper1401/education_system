# Generated by Django 5.1.5 on 2025-03-03 05:32

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
        ("course", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Exam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(editable=False, null=True)),
                ("is_deleted", models.BooleanField(editable=False, null=True)),
                ("name", models.CharField(help_text="نام ازمون", max_length=255)),
                (
                    "description",
                    models.TextField(help_text="توضیح در مورد ازمون", null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("start_datetime", models.DateTimeField(help_text="تاریخ شروع ازمون")),
                (
                    "number_of_time",
                    models.PositiveSmallIntegerField(
                        help_text="مدت زمان ازمون بر اساس دقیقه"
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="exams",
                        to="course.course",
                    ),
                ),
            ],
            options={
                "db_table": "exam",
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(editable=False, null=True)),
                ("is_deleted", models.BooleanField(editable=False, null=True)),
                ("name", models.TextField(help_text="سوال")),
                ("is_active", models.BooleanField(default=True)),
                (
                    "exam",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="questions",
                        to="exam_app.exam",
                    ),
                ),
            ],
            options={
                "db_table": "question",
            },
        ),
        migrations.CreateModel(
            name="Score",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(editable=False, null=True)),
                ("is_deleted", models.BooleanField(editable=False, null=True)),
                (
                    "score",
                    models.FloatField(
                        blank=True,
                        help_text="نمره کاربر",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "exam",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="scores",
                        to="exam_app.exam",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="student_scores",
                        to="accounts.student",
                    ),
                ),
            ],
            options={
                "db_table": "score",
            },
        ),
        migrations.CreateModel(
            name="Participation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(editable=False, null=True)),
                ("is_deleted", models.BooleanField(editable=False, null=True)),
                (
                    "exam",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="participation_exam",
                        to="exam_app.exam",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="participation_student",
                        to="accounts.student",
                    ),
                ),
            ],
            options={
                "db_table": "participation",
                "unique_together": {("student", "exam")},
            },
        ),
        migrations.CreateModel(
            name="Answer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(editable=False, null=True)),
                ("is_deleted", models.BooleanField(editable=False, null=True)),
                ("answer", models.TextField(help_text="جواب ازمون")),
                ("is_active", models.BooleanField(default=True)),
                (
                    "student_ip_address",
                    models.GenericIPAddressField(
                        blank=True, help_text="ادرس ای پی کاربر", null=True
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="student_answers",
                        to="accounts.student",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="answers",
                        to="exam_app.question",
                    ),
                ),
            ],
            options={
                "db_table": "answer",
                "unique_together": {("question", "student")},
            },
        ),
    ]
