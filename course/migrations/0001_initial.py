# Generated by Django 5.1.5 on 2025-05-23 18:11

import course.utils
import course.validators
import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('images', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('is_deleted', models.BooleanField(editable=False, null=True)),
                ('category_name', models.CharField(db_index=True, max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='category_images/%Y/%m/%d')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'category',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('is_deleted', models.BooleanField(editable=False, null=True)),
                ('title', models.CharField(max_length=255)),
                ('is_publish', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'poll_question',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('is_deleted', models.BooleanField(editable=False, null=True)),
                ('comment_body', models.TextField(verbose_name='متن کامنت')),
                ('is_publish', models.BooleanField(default=True)),
                ('is_pined', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_comments', to='course.category')),
                ('user', models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.CASCADE, related_name='user_comment', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'comment',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('is_deleted', models.BooleanField(editable=False, null=True)),
                ('course_name', models.CharField(db_index=True, max_length=100)),
                ('course_description', models.TextField()),
                ('course_image', models.ImageField(blank=True, help_text='حداکثر اندازه عکس 1 مگابایت هست', upload_to='course_image/%Y/%m/%d', validators=[course.validators.max_upload_image_validator])),
                ('is_publish', models.BooleanField(default=True)),
                ('project_counter', models.PositiveSmallIntegerField(null=True)),
                ('is_free', models.BooleanField(default=False)),
                ('facilities', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=30), blank=True, null=True, size=None)),
                ('course_level', models.CharField(blank=True, max_length=13, null=True)),
                ('time_course', models.CharField(blank=True, help_text='مدت زمان دوره', max_length=10)),
                ('course_age', models.CharField(blank=True, help_text='بازه سنی دوره', max_length=30)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_category', to='course.category')),
            ],
            options={
                'db_table': 'course',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='CourseTypeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('is_deleted', models.BooleanField(editable=False, null=True)),
                ('price', models.FloatField()),
                ('description', models.CharField(blank=True, max_length=300)),
                ('is_active', models.BooleanField(default=True)),
                ('course_type', models.CharField(choices=[('private', 'خصوصی'), ('economy', 'اکونومی')], default='private', max_length=8)),
                ('amount', models.PositiveSmallIntegerField(blank=True)),
                ('plan_type', models.CharField(blank=True, choices=[('month', 'ماه'), ('year', 'سال'), ('day', 'روز')], max_length=5)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_type_model', to='course.course')),
            ],
            options={
                'db_table': 'course_type',
            },
        ),
        migrations.CreateModel(
            name='LessonCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('is_deleted', models.BooleanField(editable=False, null=True)),
                ('class_name', models.CharField(help_text='نام کلاس')),
                ('is_active', models.BooleanField(default=True, help_text='دیتا در سطح اپلیکیشن نمایش داده شود یا خیر')),
                ('progress', models.CharField(choices=[('not_started', 'Not Started'), ('finished', 'Finished'), ('in_progress', 'In Progress')], default='not_started', help_text='وضعیت پیشرفت کلاس', max_length=11, null=True)),
                ('coach', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coach_less_course', to='accounts.coach')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_course', to='course.course')),
            ],
            options={
                'db_table': 'lesson_course',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='CallLessonCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('is_deleted', models.BooleanField(editable=False, null=True)),
                ('call', models.CharField(help_text='تماس', max_length=50)),
                ('status', models.CharField(choices=[('successful', 'موفق'), ('un_successful', 'ناموفق'), ('nothing', 'چیزی ثبت نشده هست')], db_index=True, help_text='وضعیت تماس', max_length=13)),
                ('call_answering', models.CharField(help_text='پاسخگوی تماس', max_length=20)),
                ('project', models.CharField(help_text='بابت پروژه', max_length=30)),
                ('call_date', models.DateField(help_text='تاریخ مکالمه')),
                ('result_call', models.TextField(help_text='نتیجه مکالمه')),
                ('cancellation_alert', models.BooleanField(default=False, help_text='هشدار انصراف')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_call', to='accounts.student')),
                ('lesson_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='call', to='course.lessoncourse')),
            ],
            options={
                'db_table': 'call_lesson_course',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='OnlineLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('is_deleted', models.BooleanField(editable=False, null=True)),
                ('link', models.URLField()),
                ('is_publish', models.BooleanField(default=True)),
                ('class_room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='online_link', to='course.lessoncourse')),
            ],
            options={
                'db_table': 'online_link',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('is_deleted', models.BooleanField(editable=False, null=True)),
                ('title', models.CharField(db_index=True, max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('cover_image', models.ImageField(null=True, upload_to='section_cover_image/%Y/%m/%d', validators=[course.validators.max_upload_image_validator])),
                ('is_publish', models.BooleanField(default=True)),
                ('is_last_section', models.BooleanField(default=False, help_text='اگر این مقدار برابر با ترو باشد یعنی اخرین سکشن برای درس خواهد بود')),
                ('course', models.ForeignKey(limit_choices_to={'is_publish': True}, on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='course.course')),
            ],
            options={
                'db_table': 'course_section',
                'ordering': ('created_at',),
                'permissions': [('can_access_section', 'can access section')],
            },
        ),
        migrations.CreateModel(
            name='SectionFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('is_deleted', models.BooleanField(editable=False, null=True)),
                ('title', models.CharField(help_text='عنوان', max_length=100, null=True)),
                ('zip_file', models.FileField(blank=True, upload_to='section_file/%Y/%m/%d', validators=[django.core.validators.FileExtensionValidator(['zip', 'rar'])])),
                ('file_type', models.CharField(choices=[('main', 'تمرین اصلی'), ('more', 'تمرین اضافی')], max_length=9, null=True)),
                ('answer', models.FileField(blank=True, null=True, upload_to='answer/section_file/%Y/%m/%d', validators=[django.core.validators.FileExtensionValidator(['zip', 'rar'])])),
                ('is_publish', models.BooleanField(default=True)),
                ('section', models.ForeignKey(limit_choices_to={'is_publish': True}, on_delete=django.db.models.deletion.CASCADE, related_name='section_files', to='course.section')),
            ],
            options={
                'db_table': 'course_section_file',
            },
        ),
        migrations.CreateModel(
            name='SectionQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('is_deleted', models.BooleanField(editable=False, null=True)),
                ('question_title', models.CharField(max_length=255, null=True)),
                ('is_publish', models.BooleanField(default=True)),
                ('section', models.ForeignKey(limit_choices_to={'is_publish': True}, on_delete=django.db.models.deletion.CASCADE, related_name='section_question', to='course.section')),
            ],
            options={
                'db_table': 'section_question',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='AnswerQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('is_deleted', models.BooleanField(editable=False, null=True)),
                ('rate', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10')])),
                ('student', models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.CASCADE, related_name='student_poll_answer', to='accounts.student')),
                ('section_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_question', to='course.sectionquestion')),
            ],
            options={
                'db_table': 'poll_answer',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='SectionVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('is_deleted', models.BooleanField(editable=False, null=True)),
                ('title', models.CharField(help_text='عنوان', max_length=50, null=True)),
                ('video', models.FileField(upload_to='section_video/%Y/%m/%d', validators=[django.core.validators.FileExtensionValidator(['mp4'])])),
                ('is_publish', models.BooleanField(default=True)),
                ('section', models.ForeignKey(limit_choices_to={'is_publish': True}, on_delete=django.db.models.deletion.CASCADE, related_name='section_videos', to='course.section')),
            ],
            options={
                'db_table': 'course_section_video',
            },
        ),
        migrations.CreateModel(
            name='SendSectionFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('is_deleted', models.BooleanField(editable=False, null=True)),
                ('send_file_status', models.CharField(blank=True, choices=[('rejected', 'رد شده'), ('accept_to_wait', 'در انتظا تایید'), ('accepted', 'تایید شده')], default='accept_to_wait', help_text='وضعیت فایل ارسالی', max_length=14, null=True)),
                ('zip_file', models.FileField(help_text='فایل ارسالی', upload_to=course.utils.student_send_section_file)),
                ('comment_student', models.TextField(help_text='توضیحی در مورد تمرین ارسالی', null=True)),
                ('comment_teacher', models.CharField(blank=True, help_text='توضیح مربی در مورد فایل ارسال شده دانشجو', max_length=255, null=True)),
                ('score', models.FloatField(blank=True, help_text='نمره تکلیف ارسالی', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('section_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_files', to='course.sectionfile')),
                ('student', models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.CASCADE, related_name='send_section_files', to='accounts.student')),
            ],
            options={
                'db_table': 'send_file',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='SignupCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('is_deleted', models.BooleanField(editable=False, null=True)),
                ('student_name', models.CharField(help_text='نام و نام خوادگی داشن اموز', max_length=120)),
                ('phone_number', models.CharField(help_text='شماره تلفن ', max_length=15)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_signup', to='course.course')),
            ],
            options={
                'db_table': 'course_signup',
            },
        ),
        migrations.CreateModel(
            name='StudentAccessSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('is_deleted', models.BooleanField(editable=False, null=True)),
                ('is_access', models.BooleanField(default=False)),
                ('section', models.ForeignKey(limit_choices_to={'is_publish': True}, on_delete=django.db.models.deletion.CASCADE, related_name='student_section', to='course.section')),
                ('student', models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.CASCADE, related_name='student_access_section', to='accounts.student')),
            ],
            options={
                'db_table': 'student_access_section',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='StudentEnrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('is_deleted', models.BooleanField(editable=False, null=True)),
                ('student_status', models.CharField(blank=True, choices=[('active', 'فعال'), ('cancel', 'انصراف'), ('not_paid', 'پرداخت نکرده')], default='active', max_length=8)),
                ('lesson_course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_course_enrollment', to='course.lessoncourse')),
                ('student', models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.CASCADE, related_name='student_enrollment', to='accounts.student')),
            ],
            options={
                'db_table': 'lesson_course_students',
                'ordering': ('created_at',),
            },
        ),
        migrations.AddField(
            model_name='lessoncourse',
            name='students',
            field=models.ManyToManyField(related_name='student_lesson_course', through='course.StudentEnrollment', to='accounts.student'),
        ),
        migrations.CreateModel(
            name='StudentSectionScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('is_deleted', models.BooleanField(editable=False, null=True)),
                ('score', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('section', models.ForeignKey(limit_choices_to={'is_publish': True}, on_delete=django.db.models.deletion.CASCADE, related_name='section_score', to='course.section')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_section_score', to='accounts.student')),
            ],
            options={
                'db_table': 'course_section_score',
            },
        ),
        migrations.CreateModel(
            name='PresentAbsent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student_status', models.CharField(choices=[('present', 'حاضر'), ('activity', 'حضور فعال'), ('absent', 'غایب'), ('late_attendance', 'حضور با تاخیر'), ('inactivity', 'عدم فعالیت'), ('nothing', 'خالی')], default='nothing')),
                ('student', models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.CASCADE, related_name='student_present_absent', to='accounts.student')),
                ('section', models.ForeignKey(limit_choices_to={'is_publish': True}, on_delete=django.db.models.deletion.CASCADE, related_name='section_present_absent', to='course.section')),
            ],
            options={
                'db_table': 'course_section_present_absent',
                'ordering': ('-created_at',),
                'constraints': [models.UniqueConstraint(fields=('section', 'student'), name='unique_section_student')],
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('is_deleted', models.BooleanField(editable=False, null=True)),
                ('image', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='image_certificate', to='images.image')),
                ('student', models.ForeignKey(limit_choices_to={'is_active': True}, on_delete=django.db.models.deletion.CASCADE, related_name='student_certificates', to='accounts.student')),
                ('section', models.ForeignKey(limit_choices_to={'is_publish': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='section_certificates', to='course.section')),
            ],
            options={
                'db_table': 'course_certificate',
                'unique_together': {('section', 'student')},
            },
        ),
    ]
