# Generated by Django 5.1.5 on 2025-03-18 16:59

import course.validators
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(editable=False, null=True)),
                ("is_deleted", models.BooleanField(editable=False, null=True)),
                ("path", models.CharField(max_length=255, unique=True)),
                ("depth", models.PositiveIntegerField()),
                ("numchild", models.PositiveIntegerField(default=0)),
                ("category_name", models.CharField(db_index=True, max_length=100)),
            ],
            options={
                "db_table": "category",
            },
        ),
        migrations.CreateModel(
            name="Practice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(editable=False, null=True)),
                ("is_deleted", models.BooleanField(editable=False, null=True)),
                (
                    "practice_title",
                    models.CharField(help_text="عنوان تمرین", max_length=100),
                ),
                ("practice", models.FileField(upload_to="practice/%Y/%m/%d")),
                ("is_publish", models.BooleanField(default=True)),
                ("start_date", models.DateTimeField(help_text="تاریخ شروع")),
                ("end_date", models.DateTimeField(help_text="تاریخ پایان")),
                ("practice_file", models.FileField(upload_to="practice_file/%Y/%m/%d")),
            ],
            options={
                "db_table": "practice",
            },
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(editable=False, null=True)),
                ("is_deleted", models.BooleanField(editable=False, null=True)),
                ("course_name", models.CharField(db_index=True, max_length=100)),
                ("course_description", models.TextField()),
                (
                    "course_image",
                    models.ImageField(
                        blank=True,
                        help_text="حداکثر اندازه عکس 1 مگابایت هست",
                        upload_to="course_image/%Y/%m/%d",
                        validators=[course.validators.max_upload_image_validator],
                    ),
                ),
                ("is_publish", models.BooleanField(default=True)),
                ("project_counter", models.PositiveSmallIntegerField(null=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="course_category",
                        to="course.category",
                    ),
                ),
            ],
            options={
                "db_table": "course",
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="Certificate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(editable=False, null=True)),
                ("is_deleted", models.BooleanField(editable=False, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "pdf_file",
                    models.FileField(
                        upload_to="",
                        validators=[
                            django.core.validators.FileExtensionValidator(".pdf")
                        ],
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        limit_choices_to={"is_active": True},
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="student_certificates",
                        to="accounts.student",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        limit_choices_to={"is_publish": True},
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="course_certificates",
                        to="course.course",
                    ),
                ),
            ],
            options={
                "db_table": "course_certificate",
            },
        ),
        migrations.CreateModel(
            name="LessonCourse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(editable=False, null=True)),
                ("is_deleted", models.BooleanField(editable=False, null=True)),
                ("class_name", models.CharField(help_text="نام کلاس")),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="دیتا در سطح اپلیکیشن نمایش داده شود یا خیر",
                    ),
                ),
                (
                    "progress",
                    models.CharField(
                        choices=[
                            ("not_started", "Not Started"),
                            ("finished", "Finished"),
                            ("in_progress", "In Progress"),
                        ],
                        default="not_started",
                        help_text="وضعیت پیشرفت کلاس",
                        max_length=11,
                        null=True,
                    ),
                ),
                (
                    "coach",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="coach_less_course",
                        to="accounts.coach",
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="lesson_course",
                        to="course.course",
                    ),
                ),
                (
                    "students",
                    models.ManyToManyField(
                        limit_choices_to={"is_active": True},
                        related_name="student_lesson_course",
                        to="accounts.student",
                    ),
                ),
            ],
            options={
                "db_table": "lesson_course",
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="Section",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(editable=False, null=True)),
                ("is_deleted", models.BooleanField(editable=False, null=True)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "cover_image",
                    models.ImageField(
                        null=True,
                        upload_to="section_cover_image/%Y/%m/%d",
                        validators=[course.validators.max_upload_image_validator],
                    ),
                ),
                ("is_publish", models.BooleanField(default=True)),
                (
                    "course",
                    models.ForeignKey(
                        limit_choices_to={"is_publish": True},
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="sections",
                        to="course.course",
                    ),
                ),
            ],
            options={
                "db_table": "course_section",
                "ordering": ("created_at",),
                "permissions": [("can_access_section", "can access section")],
            },
        ),
        migrations.CreateModel(
            name="PresentAbsent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(editable=False, null=True)),
                ("is_deleted", models.BooleanField(editable=False, null=True)),
                ("is_present", models.BooleanField(default=False)),
                (
                    "student",
                    models.ForeignKey(
                        limit_choices_to={"is_active": True},
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="student_present_absent",
                        to="accounts.student",
                    ),
                ),
                (
                    "section",
                    models.ForeignKey(
                        limit_choices_to={"is_publish": True},
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="section_present_absent",
                        to="course.section",
                    ),
                ),
            ],
            options={
                "db_table": "course_section_present_absent",
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="SectionFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(editable=False, null=True)),
                ("is_deleted", models.BooleanField(editable=False, null=True)),
                (
                    "title",
                    models.CharField(help_text="عنوان", max_length=100, null=True),
                ),
                (
                    "zip_file",
                    models.FileField(
                        blank=True,
                        upload_to="section_file/%Y/%m/%d",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["zip", "rar"]
                            )
                        ],
                    ),
                ),
                ("is_publish", models.BooleanField(default=True)),
                ("expired_data", models.DateTimeField(help_text="زمان انتقضای تمرین")),
                ("is_close", models.BooleanField(default=False)),
                (
                    "section",
                    models.ForeignKey(
                        limit_choices_to={"is_publish": True},
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="section_files",
                        to="course.section",
                    ),
                ),
            ],
            options={
                "db_table": "course_section_file",
            },
        ),
        migrations.CreateModel(
            name="SectionVideo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(editable=False, null=True)),
                ("is_deleted", models.BooleanField(editable=False, null=True)),
                (
                    "title",
                    models.CharField(help_text="عنوان", max_length=50, null=True),
                ),
                (
                    "video",
                    models.FileField(
                        upload_to="section_video/%Y/%m/%d",
                        validators=[
                            django.core.validators.FileExtensionValidator(["mp4"])
                        ],
                    ),
                ),
                ("is_publish", models.BooleanField(default=True)),
                (
                    "section",
                    models.ForeignKey(
                        limit_choices_to={"is_publish": True},
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="section_videos",
                        to="course.section",
                    ),
                ),
            ],
            options={
                "db_table": "course_section_video",
            },
        ),
        migrations.CreateModel(
            name="SendPractice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(editable=False, null=True)),
                ("is_deleted", models.BooleanField(editable=False, null=True)),
                (
                    "question_file",
                    models.FileField(
                        upload_to="sen_practice/%Y/%m/%d",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["rar", "zip"]
                            )
                        ],
                    ),
                ),
                (
                    "score",
                    models.FloatField(blank=True, help_text="نمره تکلیف", null=True),
                ),
                (
                    "practice",
                    models.ForeignKey(
                        limit_choices_to={"is_publish": True},
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="send_practice",
                        to="course.practice",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        limit_choices_to={"is_active": True},
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="student_practice",
                        to="accounts.student",
                    ),
                ),
            ],
            options={
                "db_table": "send_practice",
            },
        ),
        migrations.CreateModel(
            name="SendSectionFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(editable=False, null=True)),
                ("is_deleted", models.BooleanField(editable=False, null=True)),
                ("zip_file", models.FileField(help_text="فایل ارسالی", upload_to="")),
                (
                    "section_file",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="section_files",
                        to="course.sectionfile",
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["rar", "zip"]
                            )
                        ],
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        limit_choices_to={"is_active": True},
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="send_section_files",
                        to="accounts.student",
                    ),
                ),
            ],
            options={
                "db_table": "send_file",
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="StudentAccessSection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(editable=False, null=True)),
                ("is_deleted", models.BooleanField(editable=False, null=True)),
                ("is_access", models.BooleanField(default=False)),
                (
                    "section",
                    models.ForeignKey(
                        limit_choices_to={"is_publish": True},
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="student_section",
                        to="course.section",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        limit_choices_to={"is_active": True},
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="student_access_section",
                        to="accounts.student",
                    ),
                ),
            ],
            options={
                "db_table": "student_access_section",
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="StudentSectionScore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(editable=False, null=True)),
                ("is_deleted", models.BooleanField(editable=False, null=True)),
                (
                    "score",
                    models.FloatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ]
                    ),
                ),
                ("is_completed", models.BooleanField(default=False)),
                (
                    "section",
                    models.ForeignKey(
                        limit_choices_to={"is_publish": True},
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="section_score",
                        to="course.section",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        limit_choices_to={"is_active": True},
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="student_section_progress",
                        to="accounts.student",
                    ),
                ),
            ],
            options={
                "db_table": "course_section_score",
            },
        ),
    ]
